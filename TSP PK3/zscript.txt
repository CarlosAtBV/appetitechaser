version "4.2.0"

const TSP_STARTINGMONEY = 100;

const TSP_MAXMONSTERS_BH = 10;

enum ETSPGamemodes
{
	TSP_GM_STANDARD = 0,
	TSP_GM_HUNTERS = 1,
	TSP_GM_TRAINING = 2,
};

const TSP_TRACERSPEED = 40;

Class TSP_BulletPuff_Enemy : Actor replaces BulletPuff
{
	Default
	{
		DamageType "TSP_NoDamage";
		+ALWAYSPUFF
		+PUFFONACTORS
		+THRUACTORS
		+PUFFGETSOWNER
		+ALLOWTHRUFLAGS
	}
	States
	{
		Spawn:
		Melee:
		Death:
		XDeath:	
		Death.Sky:
		Bounce.Wall:
			TNT1 A 0;
			TNT1 A 0
			{
				int srcx = target.x;//+(cos(target.angle));
				int srcy = target.y;//+(sin(target.angle));
				int srcz = target.z+32;
				int dist = Vec2To(target).Length();
				
				int angler = atan2(y-srcy,x-srcx);
				int pitcher = atan2(z-srcz,dist);
				
				let tracer = TSP_HitscanTracer_Enemy(Spawn("TSP_HitscanTracer_Enemy",(srcx,srcy,srcz)));
				//tracer.A_SetSize(4,8);
				//tracer.SetDamage(4*random(1,3));
				tracer.tracerDamage = 4*random(1,3);
				tracer.target = target;
				tracer.angle = angler;
				tracer.pitch = -pitcher;
				tracer.vel = ((cos(angler)*cos(pitcher))*TSP_TRACERSPEED, (sin(angler)*cos(pitcher))*TSP_TRACERSPEED, (sin(pitcher))*TSP_TRACERSPEED);
			}
			Stop;
	}
}

#include "zscript/tsp/misc/misc_tokenizer.zsc"

#include "zscript/tsp/items_gbd.zsc"
#include "zscript/tsp/items/items_custom.zsc"
#include "zscript/tsp/items/items_syringe.zsc"

#include "zscript/tsp/menus/menu_episodes.zsc"
#include "zscript/tsp/menus/menu_characters_bh.zsc"
#include "zscript/tsp/menus/menu_bhmaps.zsc"
#include "zscript/tsp/menus/shop/menu_shop.zsc"
#include "zscript/tsp/menus/menu_highrestest_base.zsc"
#include "zscript/tsp/menus/menu_highrestest.zsc"
#include "zscript/tsp/menus/codex/codex_main.zsc"
#include "zscript/tsp/menu_items.zsc"
#include "zscript/tsp/misc_intermission.zsc"
#include "zscript/tsp/store/store_core.zsc"
#include "zscript/tsp/store/store_input.zsc"
#include "zscript/tsp/store/store_parse.zsc"
#include "zscript/tsp/misc_statusbar.zsc"

#include "zscript/tsp/gm_hunters.zsc"

#include "zscript/tsp/weapons/core_include.zsc"
#include "zscript/tsp/weapons/aaa_core.zsc"
#include "zscript/tsp/weapons/aaa_mag.zsc"
#include "zscript/tsp/weapons/aaa_pickup.zsc"
#include "zscript/tsp/weapons/aaa_tokens.zsc" // [CS] Someday, maybe we won't need tokens to play games at Chuck E. Cheese.

// MEL
#include "zscript/tsp/weapons/mel/weapon_base_mel.zsc"
#include "zscript/tsp/weapons/mel/weapon_suzu.zsc"
#include "zscript/tsp/weapons/mel/weapon_suzu_shotgun.zsc"
#include "zscript/tsp/weapons/mel/weapon_suzu_nail.zsc"
#include "zscript/tsp/weapons/mel/weapon_nikki.zsc"
#include "zscript/tsp/weapons/mel/weapon_nikki_spitfire.zsc"
#include "zscript/tsp/weapons/mel/anims_nikki.zsc"
#include "zscript/tsp/weapons/mel/weapon_melee_test_2.zsc"

// MEL (RETROGADE)
#include "zscript/tsp/weapons/melretro/weapon_base_melretro.zsc"
#include "zscript/tsp/weapons/melretro/weapon_retropistol.zsc"
#include "zscript/tsp/weapons/melretro/weapon_retropistola.zsc"
#include "zscript/tsp/weapons/melretro/weapon_retrosmg.zsc"
#include "zscript/tsp/weapons/melretro/weapon_retromp40.zsc"

#include "zscript/tsp/weapons/test_rotation.zsc"

// SHEN MI
#include "zscript/tsp/weapons/shenmi/weapon_selena.zsc"

Class TSP_Hunters_Kills : Inventory { Default { Inventory.MaxAmount 9999; } }
Class TSP_Hunters_MaxCombo : Inventory { Default { Inventory.MaxAmount 9999; } } // [Py] good luck getting that many in a row. fool. foolish man.

#include "zscript/tsp/misc_upgrades.zsc"
#include "zscript/tsp/upgrades/upgrades_arc.zsc"
#include "zscript/tsp/misc_player.zsc"
#include "zscript/tsp/player/player_base.zsc"
#include "zscript/tsp/player/player_casings.zsc"
#include "zscript/tsp/player/player_bob.zsc"
#include "zscript/tsp/player/player_target.zsc"
#include "zscript/tsp/player/player_log.zsc"
#include "zscript/tsp/player/player_weapon.zsc"
#include "zscript/tsp/player/player_move.zsc"
#include "zscript/tsp/player/player_cheat.zsc"
#include "zscript/tsp/events/event_main.zsc"

#include "zscript/tsp/characters/char_mel.zsc"
#include "zscript/tsp/characters/char_melretro.zsc"
#include "zscript/tsp/characters/char_shen.zsc"
#include "zscript/tsp/characters/char_dummy.zsc"

#include "zscript/tsp/events/event_replace.zsc"
#include "zscript/tsp/events/event_bh_map.zsc"
#include "zscript/tsp/events/event_psx.zsc"
#include "zscript/tsp/events/event_bountyhunters.zsc"
#include "zscript/tsp/events/event_titlescreen.zsc"
#include "zscript/tsp/events/event_psprites.zsc"

#include "zscript/tsp/enemies/enemy_base.zsc"
#include "zscript/tsp/enemies/test/test_fella.zsc"

#include "zscript/tsp/maps/event_skiff.zsc"

Class TSP_GlobalVariables : Thinker
{
	int tsp_employer;

	TSP_GlobalVariables Init()
	{
		ChangeStatNum(STAT_STATIC);
		return self;
	}

	static TSP_GlobalVariables Get()
	{
		ThinkerIterator it = ThinkerIterator.Create("TSP_GlobalVariables",STAT_STATIC);
		let p = TSP_GlobalVariables(it.Next());
		if (p == null)
		{
			p = new("TSP_GlobalVariables").Init();
		}
		return p;
	}
}

Class TSP_DebugFontMenu : GenericMenu
{
	static const string debugFonts[] =
	{
		"BigFont",
		"SmallFont",
		"TinyFont",
		"tsp_bold"
	};
	override void Drawer()
	{
		super.Drawer();
		screen.Dim("6F0E76", 1.0, 0, 0, screen.GetWidth(), screen.GetHeight());
		int y = 0;
		for(int i = 0;i<debugFonts.Size();i++)
		{
			Font disFont = Font.FindFont(debugFonts[i]);
			screen.DrawText(disFont, Font.CR_UNTRANSLATED, 64, 64+y, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
			y += disFont.GetHeight()+4;
		}
	}
}

Class TSP_Ship_FridgeNoise : Actor
{
	Default
	{
		Radius 4;
		RenderStyle "None";
	}
	States
	{
		Spawn:
			ISP0 A 0;
			ISP0 A 0 A_PlaySound("ambience/fridge/loop",CHAN_BODY,1.0,true);
			ISP0 A -1;
			Stop;
	}
}

Class TSP_Prop_ShipMonitors : Actor
{
	Default
	{
		+NOGRAVITY
		Height 4;
	}
	States
	{
		Spawn:
			POSS A -1;
			Stop;
	}
}

Class TSP_Prop_PlanetSphere : Actor
{
	Default
	{
		+NOGRAVITY
		Height 4;
	}
	States
	{
		Spawn:
			POSS A -1;
			Stop;
	}
}