version "3.7.0"

const TSP_STARTINGMONEY = 100;

enum ETSPGamemodes
{
	TSP_GM_STANDARD = 0,
	TSP_GM_HUNTERS = 1,
	TSP_GM_TRAINING = 2,
};

#include "zscript/tsp/misc/misc_tokenizer.zsc"

#include "zscript/tsp/items_gbd.zsc"
#include "zscript/tsp/items/items_custom.zsc"

#include "zscript/tsp/menus/menu_episodes.zsc"
#include "zscript/tsp/menus/menu_characters_bh.zsc"
#include "zscript/tsp/menu_items.zsc"
#include "zscript/tsp/misc_intermission.zsc"
#include "zscript/tsp/store/store_core.zsc"
#include "zscript/tsp/store/store_input.zsc"
#include "zscript/tsp/store/store_parse.zsc"
#include "zscript/tsp/misc_statusbar.zsc"

#include "zscript/tsp/gm_hunters.zsc"

#include "zscript/tsp/weapons/aaa_core.zsc"
#include "zscript/tsp/weapons/aaa_mag.zsc"
#include "zscript/tsp/weapons/aaa_pickup.zsc"

Class TSP_Hunters_Kills : Inventory { Default { Inventory.MaxAmount 9999; } }
Class TSP_Hunters_MaxCombo : Inventory { Default { Inventory.MaxAmount 9999; } } // [Py] good luck getting that many in a row. fool. foolish man.

#include "zscript/tsp/misc_upgrades.zsc"
#include "zscript/tsp/upgrades/upgrades_arc.zsc"
#include "zscript/tsp/misc_player.zsc"
#include "zscript/tsp/player/player_bob.zsc"
#include "zscript/tsp/player/player_target.zsc"
#include "zscript/tsp/player/player_log.zsc"
#include "zscript/tsp/events/event_main.zsc"

#include "zscript/tsp/characters/char_mel.zsc"
#include "zscript/tsp/characters/char_shen.zsc"
#include "zscript/tsp/characters/char_diaz.zsc"
#include "zscript/tsp/characters/char_dummy.zsc"

#include "zscript/tsp/events/event_replace.zsc"

#include "zscript/tsp/enemies/test/test_fella.zsc"

Class TSP_GlobalVariables : Thinker
{
	int tsp_employer;

	TSP_GlobalVariables Init()
	{
		ChangeStatNum(STAT_STATIC);
		return self;
	}

	static TSP_GlobalVariables Get()
	{
		ThinkerIterator it = ThinkerIterator.Create("TSP_GlobalVariables",STAT_STATIC);
		let p = TSP_GlobalVariables(it.Next());
		if (p == null)
		{
			p = new("TSP_GlobalVariables").Init();
		}
		return p;
	}
}

Class TSP_DebugFontMenu : GenericMenu
{
	static const string debugFonts[] =
	{
		"BigFont",
		"SmallFont",
		"TinyFont"
	};
	override void Drawer()
	{
		super.Drawer();
		screen.Dim("6F0E76", 1.0, 0, 0, screen.GetWidth(), screen.GetHeight());
		int y = 0;
		for(int i = 0;i<debugFonts.Size();i++)
		{
			Font disFont = Font.FindFont(debugFonts[i]);
			screen.DrawText(disFont, Font.CR_UNTRANSLATED, 64, 64+y, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
			y += disFont.GetHeight()+4;
		}
	}
}

Class TSP_Ship_FridgeNoise : Actor
{
	Default
	{
		Radius 4;
		RenderStyle "None";
	}
	States
	{
		Spawn:
			ISP0 A 0;
			ISP0 A 0 A_PlaySound("ambience/fridge/loop",CHAN_BODY,1.0,true);
			ISP0 A -1;
			Stop;
	}
}

Class TSP_Prop_ShipMonitors : Actor
{
	Default
	{
		+NOGRAVITY
		Height 4;
	}
	States
	{
		Spawn:
			POSS A -1;
			Stop;
	}
}

Class TSP_Prop_PlanetSphere : Actor
{
	Default
	{
		+NOGRAVITY
		Height 4;
	}
	States
	{
		Spawn:
			POSS A -1;
			Stop;
	}
}