Extend Class TSP_ShopMenu
{
	void parseShopLumps ()
	{	
		for(int file = -1; (file = Wads.FindLump("TSPSTORE", file + 1)) != -1;)
		{
			parseThisLump(file);
		}
	}
	
	const MAXITERATIONS = 9001;
	
	Array<TSP_ShopItem > curItems;
	
	bool parse_stayIn(TSP_Token token,int net)
	{
		Console.Printf("\cl"..(token.type!=TSPT_EOF && token.type!=TSPT_BraceC && net<MAXITERATIONS));
		return (token.type!=TSPT_EOF && token.type!=TSPT_BraceC && net<MAXITERATIONS);
	}
	
	void parseThisLump(int file)
	{
		Console.Printf("Processing new store lump");
		let lumpy = Wads.ReadLump(file);
		
		//Console.Printf(""..lumpy);
		TSP_Tokenizer tokenitup = TSP_Tokenizer.Create(lumpy);
		TSP_Token tokenboy = tokenitup.GoThru();
		
		int safetyNet = 0;
		int i;
		while(tokenboy.type!=TSPT_EOF&&safetyNet<MAXITERATIONS)
		{
			if(tokenboy.type == TSPT_Identifier)
			{
				if(tokenboy.value == "page")
				{
					curPage = new("TSP_ShopPage");
					curPage.name = "???";
					curPage.employer = -1;
					for(i = 0; parse_stayIn(tokenboy,safetyNet); tokenboy = tokenitup.GoThru())
					{
						if(tokenboy.value == "name")
						{
							tokenboy = tokenitup.GoThru();
							curPage.name = StringTable.Localize(tokenboy.value);
						}
						if(tokenboy.value == "ifEmployer")
						{
							tokenboy = tokenitup.GoThru();
							curPage.employer = StringTable.Localize(tokenboy.value).ToInt();
						}
						if(tokenboy.value == "tab")
						{
							curTab = new("TSP_ShopTab");
							curTab.name = tokenitup.GoThru().value;
							curTab.desc = "";
							for(i = 0; parse_stayIn(tokenboy,safetyNet); tokenboy = tokenitup.GoThru())
							{
								if(tokenboy.value == "name")
								{
									tokenboy = tokenitup.GoThru();
									curTab.name = tokenboy.value;
								}
								if(tokenboy.value == "desc")
								{
									tokenboy = tokenitup.GoThru();
									curTab.desc = StringTable.Localize(tokenboy.value);
								}
								if(tokenboy.value == "employ")
								{
									tokenboy = tokenitup.GoThru();
									TSP_ShopEmploy curItem = new("TSP_ShopEmploy");
									curItem.employer = tokenboy.value.ToInt();
									curItem.pos = (160+80,216);
									curTab.employ = curItem;
								}
								if(tokenboy.value == "bg")
								{
									tokenboy = tokenitup.GoThru();
									curTab.bg = tokenboy.value;
								}
								if(tokenboy.value == "header")
								{
									tokenboy = tokenitup.GoThru();
									TSP_ShopHeader curItem = new("TSP_ShopHeader");
									curItem.name = tokenboy.value;
									curTab.itemlist.Push(curItem);
								}
								
								// Create Item
								if(tokenboy.value == "item")
								{
									Array<String > names;
									Array<String > descs;
									names.Clear();
									descs.Clear();
									//names.Push(tokenitup.GoThru().value);
									/*while(tokenitup.GoThru().type == TSPT_Comma)
									{
										names.Push(tokenitup.GoThru().value);
									}*/
									TSP_ShopItem curItem = new("TSP_ShopItem");
									curItem.saveID = tokenitup.GoThru().value;
									curItem.names.Clear();
									//curItem.names.Copy(names);
									curItem.inv_class = null;//"HealthBonus";
									curItem.inv_amount = 1;//25;
									curItem.price = 0;
									curItem.price_increment = 0;
									curItem.level = 0;
									curItem.maxlevel = -1;
									curItem.descInt = "N/A";
									
									for(i = 0; parse_stayIn(tokenboy,safetyNet); tokenboy = tokenitup.GoThru())
									{
										if(tokenboy.value == "name")
										{
											curItem.names.Push(tokenitup.GoThru().value);
											while(tokenitup.GoThru().type == TSPT_Comma)
											{
												curItem.names.Push(tokenitup.GoThru().value);
											}
										}
										if(tokenboy.value == "price")
										{
											tokenboy = tokenitup.GoThru();
											curItem.price = tokenboy.value.ToInt();
										}
										if(tokenboy.value == "price_increment")
										{
											tokenboy = tokenitup.GoThru();
											curItem.price_increment = tokenboy.value.ToInt();
										}
										if(tokenboy.value == "icons")
										{
											tokenboy = tokenitup.GoThru();
											curItem.icons.Push(tokenboy.value);
											while(tokenitup.GoThru().type == TSPT_Comma)
											{
												curItem.icons.Push(tokenitup.GoThru().value);
											}
										}
										if(tokenboy.value == "desc")
										{
											tokenboy = tokenitup.GoThru();
											curItem.descs.Push(tokenboy.value);
										}
										if(tokenboy.value == "descs")
										{
											tokenboy = tokenitup.GoThru();
											curItem.descs.Push(tokenboy.value);
											while(tokenitup.GoThru().type == TSPT_Comma)
											{
												curItem.descs.Push(tokenitup.GoThru().value);
											}
										}
										if(tokenboy.value == "inv_class")
										{
											tokenboy = tokenitup.GoThru();
											curItem.inv_class = tokenboy.value;
										}
										if(tokenboy.value == "inv_amount")
										{
											tokenboy = tokenitup.GoThru();
											curItem.inv_amount = tokenboy.value.ToInt();
										}
										
										if(tokenboy.value == "mod_take")
										{
											tokenboy = tokenitup.GoThru();
											curItem.mod_take = tokenboy.value;
										}
										if(tokenboy.value == "mod_give")
										{
											tokenboy = tokenitup.GoThru();
											curItem.mod_give = tokenboy.value;
										}
										
										if(tokenboy.value == "upgrade")
										{
											tokenboy = tokenitup.GoThru();
											curItem.upgrade = tokenboy.value;
											Class<Inventory > cls = tokenboy.value;
											curItem.musthave.Push(cls);
										}
										if(tokenboy.value == "upgradeType")
										{
											tokenboy = tokenitup.GoThru();
											curItem.upgradeType = tokenboy.value.ToInt();
										}
										
										if(tokenboy.value == "consumable")
										{
											tokenboy = tokenitup.GoThru();
											curItem.consumable = true;
										}
									}
									
									curItem.brokendesc = sm_tinyFont.BreakLines(curItem.desc, 140);
									if(curItem.inv_class is "TSP_UpgradeBase")
									{
										curItem.level = players[0].mo.CountInv(curItem.inv_class);
									}
									curItem.Create();
									curTab.itemlist.Push(curItem);
								}
								
							}
							curPage.shopTabs.Push(curTab);
							//tokenboy = tokenitup.GoThru();
						}
						safetyNet++;
					}
					shopPages.Push(curPage);
				}
			}
			tokenboy = tokenitup.GoThru();
			safetyNet++;
		}
		Console.Printf(""..safetyNet);
	}
}