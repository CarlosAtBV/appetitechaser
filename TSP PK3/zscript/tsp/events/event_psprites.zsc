Extend Class TSP_EventHandler
{
	ui double lerp(double start, double finish, double progress)
	{
		//progress 0.0 is start, 1.0 is finish.
		return start + (finish - start) * progress;
	}
	
	override void RenderUnderlay(RenderEvent e)
	{
		let psprite = players[consoleplayer].psprites;
		let character = TSP_PlayerPawn_ZSCBase(players[consoleplayer].mo);
		
		while(psprite)
		{
			if( psprite != null )
			{
				if ( psprite.CurState != null )
				{
					let sprTex = TexMan.CheckForTexture(String.Format(psprite.Sprite.."%c0", 65+psprite.frame));
					//let sprTex = psprite.CurState.GetSpriteTexture(0);
					Vector2 sprOffset = TexMan.GetScaledOffset(sprTex);
					
					double weaponTilt = psprite.rotation;
					
					double lightLevel = character.cursector ? character.cursector.lightlevel / 255.0 : 0.0;
					
					Vector2 newOffset = (160, 100 - 32) + sprOffset;
					
					Vector2 weaponOldPos = (psprite.oldx, psprite.oldy);
					Vector2 weaponNewPos = (psprite.x, psprite.y);
					Vector2 weaponPos = (
						lerp(weaponOldPos.x, weaponNewPos.x, e.FracTic),
						lerp(weaponOldPos.y, weaponNewPos.y, e.FracTic)
					);
					//Actor.RotateVector(
					weaponPos.y -= 32;
					
					newOffset -= character.TSP_BobWeapon(e.FracTic);
					
					//weaponPos = Actor.RotateVector(weaponPos, weaponTilt);
					//psprite.rotation;//cos((walkTimer * 2) + 35) * walkAmt * 4; //250
					
					for (int i = 0; i < 2; i++)
					{
						Screen.DrawTexture(sprTex, false, 160 + weaponPos.x, 100 + weaponPos.y,
							DTA_VirtualWidth, 320,
							DTA_VirtualHeight, 200,
							DTA_Rotate, weaponTilt,
							//DTA_CenterOffset, true,
							DTA_LegacyRenderStyle, psprite.id == PSP_FLASH ? Style_Add :
								i == 1 ? Style_Translucent : Style_Stencil,
							DTA_FillColor, i == 0 ? 25 : -1,
							DTA_LeftOffsetF, newOffset.x, DTA_TopOffsetF, newOffset.y,//sprOffset.x+160, DTA_TopOffsetF, sprOffset.y,
							DTA_Alpha, i == 1 ? lightLevel : 1.0);
					}
				}
				psprite = psprite.Next;
			}
		}
	}
}