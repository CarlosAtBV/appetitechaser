Class TSP_DeathPlane : Actor
{
	//$Arg0 Z Position
}

Class TSP_EventHandler : EventHandler
{
	ui bool tsp_shopmusic;
	
	bool gameover;
	
	Array<Actor > eh_livingThings;
	bool eh_hasDeathPlane;
	int eh_deathZ;
	
	float eh_telefadeout;
	int eh_telewait;
	bool eh_teleback;
	
	bool tsp_meleeonly;
	
	Array<Actor > dynlights;
	
	int gamemode;
	
	override void OnRegister()
	{
		tsp_meleeonly = CVar.GetCVar("tsp_meleesupreme",players[0]).GetBool();
	}
	
	override void WorldLoaded(WorldEvent e)
	{
		gamemode = CVar.GetCVar("tsp_gamemode",players[0]).GetInt();
		
		dynlights.Clear();
		
		ThinkerIterator findLights = ThinkerIterator.Create("DynamicLight");
		Actor mo;
		
		while ( mo = Actor(findLights.Next()) )
		{
			Console.Printf("balls");
			dynlights.Push(mo);
		}
		
		ThinkerIterator findDeathPlane = ThinkerIterator.Create("TSP_DeathPlane");
		mo = Actor(findDeathPlane.Next());
		if ( mo )
		{
			eh_hasDeathPlane = true;
			eh_deathZ = mo.args[0];
		}
		
		Shader.SetEnabled(players[consoleplayer], "TSP_TitleShader", (gamestate == GS_TITLELEVEL));
		
		/*String clsname = "GSPlayer";
		Class<Actor> cls = clsname;
		if(cls!=null)
		{
			players[0].mo.JumpZ = 15;
			Console.Printf("golden mode");
		}*/
	}
	
	/*override void WorldUnloaded(WorldEvent e)
	{
		let player = players[0].mo;
		if(player!=null)
		{
			player.score = 0;
			player.ClearInventory();
			player.GiveDefaultInventory();
			if(player.health>0)
			{
				player.health = player.player.health = player.SpawnHealth();
			}
		}
	}*/
	
	override void WorldTick()
	{
		if ( eh_hasDeathPlane )
		{
			for ( int i = 0; i < eh_livingThings.Size(); i++ )
			{
				let daFeller = eh_livingThings[i];
				if ( !daFeller )
				{
					eh_livingThings.delete(i, 1);
					i--;
					continue;
				}
				
				if ( daFeller.pos.z < eh_deathZ )
				{
					daFeller.A_Die("Falling");
				}
			}
			
			if ( players[0].mo.pos.z < eh_deathZ && !eh_teleback )
			{
				eh_teleback = true;
				eh_telewait = 15;
				players[0].mo.A_StartSound("ui/felldown", 69);
				players[0].mo.bINVULNERABLE = true;
			}
		}
		
		if ( eh_teleback )
		{
			eh_telefadeout += 0.25;
			
			if ( eh_telefadeout >= 1.0 )
			{
				eh_telefadeout = 1.0;
				eh_telewait--;
				players[0].mo.vel = (0,0,0);
				
				if ( eh_telewait <= 0 )
				{
					ThinkerIterator findGoodSpot = ThinkerIterator.Create("TSP_BountyHunters_EnemySpawn");
					Actor curSpot = null;
					TSP_BountyHunters_EnemySpawn mo;
					
					while ( mo = TSP_BountyHunters_EnemySpawn(findGoodSpot.Next()) )
					{
						if ( curSpot == null || ( players[0].mo.Distance3D(mo) < players[0].mo.Distance3D(curSpot) && mo.CheckSpaceFree() ) )
						{
							curSpot = mo;
						}
					}
					
					if ( curSpot )
					{
						players[0].mo.SetOrigin(curSpot.pos, false);
						players[0].mo.angle = curSpot.angle;
						players[0].mo.pitch = 0;
						players[0].mo.bINVULNERABLE = false;
						TSP_PlayerPawn_ZSCBase(players[0].mo).tsp_fb_zoomlerp = 0.75;
						eh_teleback = false;
					}
				}
			}
		}
		else
		{
			if ( eh_telefadeout > 0.0 )
			{
				eh_telefadeout -= 0.25;
			}
		}
	}
	
	override void WorldThingSpawned(WorldEvent e)
	{
		if ( eh_hasDeathPlane && e.Thing.bIsMonster )
		{
			eh_livingThings.Push(e.Thing);
		}
		
		if(tsp_meleeonly && e.Thing is "Ammo")
		{
			e.Thing.Destroy();
		}
		if((gamemode == TSP_GM_HUNTERS || CVar.GetCVar("tsp_meleesupreme").GetBool()) && (e.Thing is "TSP_WeaponPickup" || e.Thing is "TSP_Nothing"))
		{
			if(level.maptime==0 && gamemode == TSP_GM_HUNTERS)
			{
				e.Thing.Spawn("TSP_BountyHunters_TimeExtCrystal",e.Thing.pos);
			}
			e.Thing.Destroy();
		}
		if(e.Thing is "LostSoul")
		{
			e.Thing.DamageFactor = 4.0;
		}
	}
	
	override void WorldThingDamaged(WorldEvent e)
	{
		if(!e.Thing.CountInv("TSP_Mel_StasisHandler")) return;
		
		switch(gamemode)
		{
			default:
				int fuckdamage = e.Damage/5;
				while(fuckdamage>=5)
				{
					Actor money = e.Thing.Spawn("TSP_GlobalDollarPickup_5",e.Thing.pos);
					money.vel = e.Thing.vel+(frandom(-4,4),frandom(-4,4),frandom(6,12));
					fuckdamage-=5;
				}
				while(fuckdamage>=1)
				{
					Actor money = e.Thing.Spawn("TSP_GlobalDollarPickup_1",e.Thing.pos);
					money.vel = e.Thing.vel+(frandom(-4,4),frandom(-4,4),frandom(6,12));
					fuckdamage--;
				}
				break;
			case TSP_GM_HUNTERS:
				break;
		}
	}
	
	override void WorldThingDied(WorldEvent e)
	{
		if(e.Thing is "TSP_PlayerPawn_ZSCBase" && !deathmatch) return;
		
		if ( tsp_gamemode != 0 ) return;
		
		int myHealth = e.Thing.SpawnHealth()/5;
		while(myHealth>=5)
		{
			Actor money = e.Thing.Spawn("TSP_GlobalDollarPickup_5",e.Thing.pos);
			money.vel = e.Thing.vel+(frandom(-4,4),frandom(-4,4),frandom(6,12));
			myHealth-=5;
		}
		while(myHealth>=1)
		{
			Actor money = e.Thing.Spawn("TSP_GlobalDollarPickup_1",e.Thing.pos);
			money.vel = e.Thing.vel+(frandom(-4,4),frandom(-4,4),frandom(6,12));
			myHealth-=1;
		}
	}
	
	/*double lerp(double start, double finish, double progress)
	{
		//progress 0.0 is start, 1.0 is finish.
		return start + (finish - start) * progress;
	}*/
	
	override void RenderOverlay(RenderEvent e)
	{
		if(menuactive)
		{
			if(Menu.GetCurrentMenu() is "OptionMenu")
			{
				OptionMenu sins = OptionMenu(Menu.GetCurrentMenu());
				int it = 0;
				if(sins.mDesc.mTitle == "$MNU_EPISODE")
				{
					OptionMenu sin = sins;
					Menu father = sin.mParentMenu;
					Array<TSP_EpisodeMenu_Item > episodes;
					episodes.Clear();
					for(int i = 0;i < sin.mDesc.mItems.Size();i++)
					{
						TSP_EpisodeMenu_Item newOption = new("TSP_EpisodeMenu_Item");
						if(sin.mDesc.mItems[i] is "OptionMenuItem")
						{
							newOption.name = OptionMenuItem(sin.mDesc.mItems[i]).mLabel;
						}
						newOption.id = it;
						it++;
						episodes.Push(newOption);
					}
					sin.SetMenu("TSP_EpisodeMenu",0);
					TSP_EpisodeMenu(sin.GetCurrentMenu()).episodes.Copy(episodes);
					sin.GetCurrentMenu().mParentMenu = father;
					TSP_EpisodeMenu(sin.GetCurrentMenu()).updateShit();
				}
			}
		}
		
		if(Menu.GetCurrentMenu()!=null && !tsp_shopmusic)
		{
			/*if(Menu.GetCurrentMenu() is "TSP_ShopMenu")
			{
				S_ChangeMusic("music/TSP_INT.ogg");
				tsp_shopmusic = true;
			}
			else */if (Menu.GetCurrentMenu() is "TSP_CodexMenu")
			{
				S_ChangeMusic("music/TSP_CDEX.ogg");
				tsp_shopmusic = true;
			}
		}
		else if(Menu.GetCurrentMenu()==null && tsp_shopmusic)
		{
			S_ChangeMusic("*");
			tsp_shopmusic = false;
		}
		
		if(players[0].mo == null) return;
	}
	
	int demoShopAttempt;
	
	override void NetworkProcess(ConsoleEvent e)
	{
		if (!e.IsManual)
		{
			if(!players[0].mo)
			{
				return;
			}
			
			array<string> shopitem;
			e.Name.Split(shopitem, ":");
			int pNumber = shopitem[0].ToInt();
			if(shopitem[1] ~== "shopmod")
			{
				int price = shopitem[4].ToInt();
				players[0].mo.TakeInventory("TSP_GlobalDollars",price);
				players[0].mo.GiveInventory(shopitem[3],1);
				TSP_PlayerPawn_ZSCBase(players[0].mo).TSP_SwitchToMod(shopitem[3]);
				TSP_PlayerPawn_ZSCBase(players[0].mo).pp_moddelay = 12;
			}
			else if(shopitem[1] ~== "buyitem")
			{
				int price = shopitem[4].ToInt();
				players[0].mo.TakeInventory("TSP_GlobalDollars",price);
				Class<Actor > cls = shopitem[2];
				if(players[0].mo.GiveInventory(shopitem[2],shopitem[3].ToInt())&& cls is "TSP_UpgradeBase")
				{
					TSP_UpgradeBase(players[0].mo.FindInventory(shopitem[2])).UpgradeEffect(players[pNumber].mo);
				}
			}
			else if(shopitem[1] ~== "upgrade")
			{
				int price = shopitem[4].ToInt();
				TSP_Weapon_Core wepon = TSP_Weapon_Core(players[pNumber].mo.FindInventory(shopitem[2],true));
				if(wepon!=null)
				{
					switch(shopitem[3].ToInt())
					{
						case 0: wepon.tspw_powerlevel++; break;
						case 1: wepon.tspw_ammolevel++; break;
						case 2: wepon.tspw_reloadlevel++; break;
					}
				}
				players[0].mo.TakeInventory("TSP_GlobalDollars",price);
			}
			else if(shopitem[1] ~== "employer")
			{
				TSP_PlayerPawn_ZSCBase(players[pNumber].mo).gvars.tsp_employer = shopitem[1].ToInt();
			}
		}
		else
		{
			
			if ( e.Name.Left(9) ~== "tsp_event" )
			{
				Array<string> tspevent;
				e.Name.Split(tspevent, ":");
				if ( tspevent[1] ~== "taunt")
				{
					TSP_PlayerPawn_ZSCBase(players[0].mo).tsp_taunting = true;
				}
				return;
			}
			else if(e.Name == "tsp_switchmod")
			{
				PlayerInfo curPlayer = players[e.Player];
				TSP_PlayerPawn_ZSCBase(curPlayer.mo).TSP_CycleModNext();
			}
			else if(e.Name == "tsp_openstore")
			{
				string funnyMessage = "";
				switch(demoShopAttempt)
				{
					case 0:
						funnyMessage = "The shop is not available in this demo!"; break;
					case 1:
						funnyMessage = "No, really! The shop is not available!"; break;
					case 2:
						funnyMessage = "I mean it! It's broken right now anyway!"; break;
					case 3:
						funnyMessage = "Seriously! No shop!"; break;
					case 4:
						funnyMessage = "Stop it!"; break;
					case 5:
						funnyMessage = "Cease!"; break;
					case 6:
						funnyMessage = "I said CEASE!"; break;
					case 7:
						funnyMessage = "STOP!!!"; break;
					case 8:
						funnyMessage = "Aight I'm heading out"; break;
					default:
						break;
				}
				demoShopAttempt++;
				
				S_StartSound("menu/invalid", 0);
				
				if ( funnyMessage == "" ) return;
				players[e.Player].mo.A_Log(funnyMessage, true);
			}
		}
	}
}