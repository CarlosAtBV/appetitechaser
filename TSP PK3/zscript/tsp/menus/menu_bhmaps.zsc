Class TSP_BountyHuntersMapMenu_Item
{
	TextureID patch;
	string name;
}

Class TSP_BountyHuntersMap
{
	TextureID preview;
	string name;
	string maplump;
}

Class TSP_BountyHuntersMapMenu : GenericMenu
{
	static const string hardcoded_maps[] =
	{
		"TSP_BH01",
		"TSP_BH02",
		"MAP32"
	};
	
	Vector2 mapListPos;
	
	int curSelection;
	int episodeID;
	
	Array<TSP_BountyHuntersMap > bhmaps;
	
	override void Init(Menu parent)
	{
		Super.Init(parent);
		
		mapListPos = (20, 44);
		
		bhmaps.Clear();
		
		TSP_BountyHuntersMap newMap;
		
		newMap = new("TSP_BountyHuntersMap");
		newMap.name = StringTable.Localize("$TSPMAP_BATTLEZONE_NAME");
		newMap.maplump = "TSP_BH01";
		bhmaps.Push(newMap);
		newMap = new("TSP_BountyHuntersMap");
		newMap.name = StringTable.Localize("$TSPMAP_ELEGIA_NAME");
		newMap.maplump = "TSP_BH02";
		bhmaps.Push(newMap);
		newMap = new("TSP_BountyHuntersMap");
		newMap.name = StringTable.Localize("$TSPMAP_GROSSE_NAME");
		newMap.maplump = "MAP32";
		bhmaps.Push(newMap);
	}
	
	override bool MenuEvent (int mkey, bool fromcontroller)
	{
		switch (mkey)
		{
			case MKEY_Up:
				if(curSelection>0)
				{
					curSelection--;
				}
				S_Sound("menu/cursor",CHAN_UI);
				return true;
			case MKEY_Down:
				if(curSelection<bhmaps.Size()-1)
				{
					curSelection++;
				}
				S_Sound("menu/cursor",CHAN_UI);
				return true;
				
			case MKEY_Enter:
				S_Sound("menu/choose",CHAN_UI);
				CVar.GetCVar("tsp_internal_bhmap", players[0]).SetString(bhmaps[curSelection].maplump);
				SetMenu("SkillMenu",episodeID);
				return true;
		}
		return super.MenuEvent(mkey, fromcontroller);
	}
	
	override void Drawer()
	{
		//TextureID bg = TexMan.CheckForTexture("SPSKILL",TexMan.Type_MiscPatch);
		
		//screen.DrawTexture (bg, true, 103, 39, DTA_Clean, true);
		
		TextureID bg = TexMan.CheckForTexture("graphics/placeholder/sickomode.png",TexMan.Type_MiscPatch);
		
		/*string curName = bhmaps[curSelection];
		Font fnt = "SmallFont";
		screen.DrawText(SmallFont, Font.CR_WHITE, 160-fnt.StringWidth(curName)/2, 180, curName,
				DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);*/
				
		TSP_MenuCommon.Draw9Slice(12, 38, 320 - 24, 240 - 38 * 2);
		
		screen.DrawTexture(bg, true, 320-20-160, 44,
			DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			
		string bTitle = "MAP SELECT";
		screen.DrawText(BigFont, Font.FindFontColor("TSPYeller"), 160-BigFont.StringWidth(bTitle)/2, 12, bTitle,
				DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
		/*for(int i = 0;i<hardcoded_maps.Size();i++)
		{
			for(int v = 0;v<6;v++)
			{
				int sX = (80+160*i)-160*curSelection;
				screen.DrawTexture (bg, true, sX, 39, DTA_Clean, true);
			}
		}*/
		
		Vector2 mapPos = mapListPos;
		for( int i = 0; i<bhmaps.Size(); i++ )
		{
			screen.DrawText(SmallFont, i == curSelection ? Font.CR_YELLOW : Font.CR_WHITE, mapPos.x - 2 * (i == curSelection), mapPos.y, bhmaps[i].name,
				DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			mapPos.y += 10;
		}
	}
}