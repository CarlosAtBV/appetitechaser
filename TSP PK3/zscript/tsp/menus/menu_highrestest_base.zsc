Class TSP_MenuBase : GenericMenu
{
	Vector2 viewportSize;
	Vector2 screenSize;
	Vector2 viewportPos;
		
	override void Init(Menu parent)
	{
		Super.Init(parent);
	}
	
	override void Drawer()
	{
		double scaleY;
		
		if ( screen.GetHeight() < 720 )
		{
			scaleY = screen.GetHeight()/720.;
		}
		else
		{
			scaleY = floor(screen.GetHeight()/720.);
		}
		
		viewportSize = (1280 * scaleY, 720 * scaleY);
		screenSize = (screen.GetWidth(), screen.GetHeight());
		viewportPos = (screenSize - viewportSize)/2;
		
		TSP_MenuDrawer();
	}
		
	virtual void TSP_MenuDrawer()
	{
	}
	
	void Draw9Slice(int x, int y, int width, int height, string bgPic = "graphics/menu/tsp_menuborder0.png", int cornerSize = 5)
	{
		TextureID tex = TexMan.CheckForTexture(bgPic);
		
		int texSizeX, texSizeY;
		[texSizeX, texSizeY] = TexMan.GetSize(tex);
		Vector2 texSize = (texSizeX, texSizeY);
		
		screen.DrawTexture(tex, false, x, y,
			DTA_DestWidth, cornerSize, DTA_DestHeight, cornerSize,
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
		
		screen.DrawTexture(tex, false, x+width-cornerSize, y,
			DTA_SrcX, texSize.X-cornerSize,
			DTA_DestWidth, cornerSize, DTA_DestHeight, cornerSize,
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
		
		screen.DrawTexture(tex, false, x, y+height-cornerSize,
			DTA_SrcY, texSize.Y-cornerSize,
			DTA_DestWidth, cornerSize, DTA_DestHeight, cornerSize,
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
		
		screen.DrawTexture(tex, false, x+width-cornerSize, y+height-cornerSize,
			DTA_SrcX, texSize.X-cornerSize, DTA_SrcY, texSize.Y-cornerSize,
			DTA_DestWidth, cornerSize, DTA_DestHeight, cornerSize,
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
			
		//parallels
		
		screen.DrawTexture(tex, false, x+cornerSize, y,
			DTA_SrcX, cornerSize,
			DTA_DestWidth, width - (cornerSize*2), DTA_DestHeight, cornerSize,
			DTA_SrcWidth, texSize.X - (cornerSize*2), DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
			
		screen.DrawTexture(tex, false, x+cornerSize, y+height-cornerSize,
			DTA_SrcX, cornerSize, DTA_SrcY, texSize.y-cornerSize,
			DTA_DestWidth, width - (cornerSize*2), DTA_DestHeight, cornerSize,
			DTA_SrcWidth, texSize.X - (cornerSize*2), DTA_SrcHeight, cornerSize,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
		
		screen.DrawTexture(tex, false, x, y+cornerSize,
			DTA_SrcY, cornerSize,
			DTA_DestWidth, cornerSize, DTA_DestHeight, height - (cornerSize*2),
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, texSize.Y - (cornerSize*2),
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
		
		screen.DrawTexture(tex, false, x+width-cornerSize, y+cornerSize,
			DTA_SrcX, texSize.x-cornerSize, DTA_SrcY, cornerSize,
			DTA_DestWidth, cornerSize, DTA_DestHeight, height - (cornerSize*2),
			DTA_SrcWidth, cornerSize, DTA_SrcHeight, texSize.Y - (cornerSize*2),
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
			
		//mid
		
		screen.DrawTexture(tex, false, x+cornerSize, y+cornerSize,
			DTA_SrcX, cornerSize, DTA_SrcY, cornerSize,
			DTA_DestWidth, width-cornerSize*2, DTA_DestHeight, height-cornerSize*2,
			DTA_SrcWidth, texSize.X-cornerSize*2, DTA_SrcHeight, texSize.Y-cornerSize*2,
			
				DTA_VirtualWidth, 1280, DTA_VirtualHeight, 720, DTA_KeepRatio, true,
				DTA_ViewportX, int(viewportPos.x), DTA_ViewportY, int(viewportPos.y),
				DTA_ViewportWidth, int(viewportSize.x), DTA_ViewportHeight, int(viewportSize.y));
	}
}