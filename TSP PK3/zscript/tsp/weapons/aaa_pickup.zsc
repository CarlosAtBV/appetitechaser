Class TSP_WeaponPickup : CustomInventory
{
	string tsp_weapontogive;
	int tsp_ammotogive;
	string tsp_pickupmessage;
	
	Property WeaponToGive : tsp_weapontogive;
	Property AmmoToGive : tsp_ammotogive;
	
	Default
	{
		Inventory.PickupSound "general/weaponpickup";
	}
	
	virtual bool FunnyWeaponToGive(Actor toucher)
	{
		bool worked;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelPlayer':
				Console.Printf("u r mel");
				break;
			case 'TSP_MelRetroPlayer':
				Console.Printf("u r mel (but classic)");
				break;
			case 'TSP_DummyPlayer':
				Console.Printf("u r dummel");
				break;
		}
		
		return worked;
	}
	
	override void PostBeginPlay()
	{
		switch(PlayerClasses[players[consoleplayer].CurrentPlayerClass].Type.GetClassName())
		{
			case 'TSP_MelPlayer':
				SetStateLabel("TSP_MelPlayer");
				break;
			case 'TSP_MelRetroPlayer':
				SetStateLabel("TSP_MelRetroPlayer");
				break;
			case 'TSP_DummyPlayer':
				SetStateLabel("TSP_DummyPlayer");
				break;
		}
	}
	
	override bool TryPickup (in out Actor toucher)
	{
		bool worked = FunnyWeaponToGive(toucher);
		/*Class<Weapon > tehepicweponofdoom = tsp_weapontogive;
		if(tehepicweponofdoom!=null)
		{
			if(toucher.FindInventory(tehepicweponofdoom,true))
			{
				worked = toucher.GiveInventory(GetDefaultByType(tehepicweponofdoom).AmmoType1,tsp_ammotogive);
			}
			else
			{
				worked = toucher.GiveInventory(tehepicweponofdoom,1);
			}
		}*/
		if(worked)
		{
			GoAwayAndDie();
		}
		return worked;
	}
	
	bool GiveTSPWeapon(Actor fucker, Class<Inventory > tspweapon, int ammoamt = 1)
	{
		bool given;
		if(tspweapon!=null)
		{
			if(fucker.FindInventory(tspweapon,true))
			{
				given = fucker.GiveInventory(Weapon(GetDefaultByType(tspweapon)).AmmoType1,ammoamt);
			}
			else
			{
				given = fucker.GiveInventory(tspweapon,1);
				fucker.A_SelectWeapon(tspweapon.GetClassName());
				fucker.A_PlaySound(TSP_Weapon_Core(GetDefaultByType(tspweapon)).tspw_firstpickupline,CHAN_VOICE);
			}
			if(given)
			{
				TSP_PlayerPawn_ZSCBase(fucker).AddLogMessage(GetDefaultByType(tspweapon).PickupMessage(),ammoamt);
				//PrintPickupMessage(true,GetDefaultByType(tspweapon).PickupMessage());
			}
		}
		return given;
	}
	
	override String PickupMessage ()
	{
		return "";
	}
}

Class TSP_Pickup_Pistol : TSP_WeaponPickup replaces Pistol
{
	override bool FunnyWeaponToGive(Actor toucher)
	{
		bool thingGiven;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelPistol",15);
				break;
			case 'TSP_MelRetroPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelRetroPistol",15);
				break;
			case 'TSP_DummyPlayer':
				thingGiven = GiveTSPWeapon(toucher,"BFG9000",15);
				break;
		}
		
		return thingGiven;
	}
	
	States
	{
		TSP_MelPlayer:
			121P A -1;
			Stop;
		TSP_MelRetroPlayer:
			919P A -1;
			Stop;
		TSP_DummyPlayer:
			BFUG A -1;
			Stop;
	}
}

Class TSP_Pickup_MelRetroPistolA : TSP_WeaponPickup
{
	override bool FunnyWeaponToGive(Actor toucher)
	{
		bool thingGiven;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelPistolA",30);
				break;
			case 'TSP_MelRetroPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelRetroPistolA",30);
				break;
			case 'TSP_DummyPlayer':
				thingGiven = GiveTSPWeapon(toucher,"BFG9000",15);
				break;
		}
		
		return thingGiven;
	}
	
	States
	{
		TSP_MelPlayer:
			121P A -1;
			Stop;
		TSP_MelRetroPlayer:
			221P A -1;
			Stop;
		TSP_DummyPlayer:
			BFUG A -1;
			Stop;
	}
}

Class TSP_Pickup_Shotgun : TSP_WeaponPickup replaces Shotgun
{
	override bool FunnyWeaponToGive(Actor toucher)
	{
		bool thingGiven;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelSMG",16);
				break;
			case 'TSP_DummyPlayer':
				thingGiven = GiveTSPWeapon(toucher,"BFG9000",15);
				break;
		}
		
		return thingGiven;
	}
	
	States
	{
		TSP_MelPlayer:
			131P A -1;
			Stop;
		TSP_DummyPlayer:
			BFUG A -1;
			Stop;
	}
}

Class TSP_Pickup_Chaingun : TSP_WeaponPickup replaces Chaingun
{
	override bool FunnyWeaponToGive(Actor toucher)
	{
		bool thingGiven;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelRetroPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelRetroSMG",15);
				break;
			case 'TSP_DummyPlayer':
				thingGiven = GiveTSPWeapon(toucher,"BFG9000",15);
				break;
		}
		
		return thingGiven;
	}
	
	States
	{
		TSP_MelRetroPlayer:
			ABXP A -1;
			Stop;
		TSP_DummyPlayer:
			BFUG A -1;
			Stop;
	}
}

Class TSP_Pickup_MP40 : TSP_WeaponPickup
{
	override bool FunnyWeaponToGive(Actor toucher)
	{
		bool thingGiven;
		
		switch(toucher.GetClassName())
		{
			case 'TSP_MelRetroPlayer':
				thingGiven = GiveTSPWeapon(toucher,"MelRetroMP40",30);
				break;
			case 'TSP_DummyPlayer':
				thingGiven = GiveTSPWeapon(toucher,"BFG9000",15);
				break;
		}
		
		return thingGiven;
	}
	
	Default
	{
		Inventory.PickupSound "mp40/pickup";
	}
	States
	{
		TSP_MelRetroPlayer:
			MP4P A -1;
			Stop;
		TSP_DummyPlayer:
			BFUG A -1;
			Stop;
	}
}