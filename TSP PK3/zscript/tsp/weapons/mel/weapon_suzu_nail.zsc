Class MelSMGB : MelSMG
{
	Default
	{
		TSP_Weapon_Core.ModTag "Nailgun" ;
		+WEAPON.CHEATNOTWEAPON
		Tag "$MELSMGBTAG";
		Weapon.AmmoUse2 2;
		-TSP_Weapon_Core.HOLDDOWNFORMOD
		-TSP_Weapon_Core.MODFIREZOOMS
		TSP_Weapon_Core.SpriteNameBase "133";
	}
	
	States
	{
		Spawn:
			131P A -1;
			Stop;
		Select:
			TNT1 A 0 A_TakeInventory("MeleeSelected", 1);
			TNT1 A 0 A_TakeInventory("WeaponSelectMemory", 999);
			TNT1 A 0 A_GiveInventory("WeaponSelectMemory", 131);
			TNT1 A 0 A_StartSound("suzuka/draw", 5);
			TNT1 A 0 A_WeaponOffset(0,32);
			133G A 1 A_Raise;
			Loop;
			
		Ready:
			TNT1 A 0 A_JumpIfInventory("MeleePressed",1,"SPMelee");
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTrait");
			133G A 1 A_TSP_WeaponReady(WRF_ALLOWRELOAD);
			"####" A 0 A_TSP_GotoReadyState;
			Loop;
		ModReady:
			TNT1 A 0 A_JumpIfInventory("MeleePressed",1,"SPMelee");
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTrait");
			133G C 1 A_TSP_WeaponReady(WRF_ALLOWRELOAD);
			"####" A 0 A_TSP_GotoReadyState;
			Loop;
			
		Switch:
			TNT1 A 0 A_StartSound("suzuka/nailgun/on", 5);
			133S A 1;
			133S B 2;
			Goto ModReady;
		ModSwitch:
			TNT1 A 0 A_StartSound("suzuka/nailgun/off", 5);
			133S B 1;
			133S A 2;
			Goto Ready;
		
		Fire:
			"####" A 0 A_TSP_JumpIfClipEmpty("Empty");
			"####" A 0
			{
				A_StartSound("suzuka/fireb", CHAN_WEAPON|CHANF_OVERLAP);
				A_TSP_MelSMG_Fire();
			}
			"####" A 1 A_Light2;
			"####" BA 1;
			"####" A 0 A_Refire("Fire");
			"####" A 0 A_TSP_GotoReadyState;
			Goto Ready;
		
		ModFire:
			133G C 0 A_TSP_JumpIfClipEmpty("Empty");
			133G A 0
			{
				//A_TSP_FireBullets(2,4,-1,7,"TSP_BulletPuff",1);
				A_StartSound("suzuka/firebng", CHAN_WEAPON|CHANF_OVERLAP);
				A_AlertMonsters();
				//A_FireProjectile("TSP_Projectile_Nail",0,0);
				//A_TSP_FireBullets(frandom(2,8),frandom(-2,2),-1,0,"TSP_BulletPuff",FBF_EXPLICITANGLE,2048,"TSP_Projectile_Nail",0,-2);
				//A_TSP_FireBullets(frandom(-8,-2),frandom(-2,2),-1,0,"TSP_BulletPuff",FBF_EXPLICITANGLE,2048,"TSP_Projectile_Nail",0,2);
				A_FireProjectile("TSP_Projectile_Nail",frandom(-8,-2)+1,0,1);
				A_FireProjectile("TSP_Projectile_Nail",frandom(2,8)+1,0,4);
				A_TSP_TakeClip(2);
				//A_TSP_WeaponRecoilDir(random(35,55),frandom(4,9));
				A_GunFlash("Flash");
				A_SetPitch(pitch - 0.8);//0.6, SPF_INTERPOLATE);
				A_SetAngle(angle + (frandom(-0.1,0.3)));
				A_TSP_WeaponRecoilDir(45+random(-5,5),frandom(12,16));
			}
			133G E 1 A_Light2;
			133G E 1
			{
				A_TSP_WeaponRecoilDir(45,frandom(12,16));
				A_SetPitch(pitch - 0.4);//, SPF_INTERPOLATE);
			}
			133G C 3;
			TNT1 A 0 A_Refire("ModFire");
			"----" A 0 A_TSP_GotoReadyState;
			Goto Ready;
			
		Flash:
			"----" A 0
			{
				A_OverlayFlags(PSP_FLASH,PSPF_RENDERSTYLE,true);
				A_OverlayRenderstyle(PSP_FLASH,STYLE_Add);
			}
			133F A 1 BRIGHT A_Jump(128,1);
			Stop;
			133F C 1 BRIGHT;
			Stop;
		AltFlash:
			"----" A 0
			{
				A_OverlayFlags(PSP_FLASH,PSPF_RENDERSTYLE,true);
				A_OverlayRenderstyle(PSP_FLASH,STYLE_Add);
			}
			133F B 1 BRIGHT A_Jump(128,1);
			Stop;
			133F D 1 BRIGHT;
			Stop;
		
		SpriteStore:
			133R A 0;
			133S A 0;
			133M A 0;
			Stop;
	}
}

Class TSP_Projectile_Nail : Actor
{
	Default
	{
		Projectile;
		DamageFunction (14);
		Speed 45;
		Radius 4;
		Height 8;
		-NOGRAVITY
		//Gravity 0.5
	}
	
	bool wallhit;
	
	override void Tick()
	{
		if(!wallhit)
		{
			A_FaceMovementDirection();
		}
		super.Tick();
	}
	
	States
	{
		Spawn:
			POSS A -1;
			Stop;
		XDeath:
			TNT1 A 0 A_PlaySound("hit/flesh");
			Stop;
		Death:
			POSS A -1
			{
				wallhit = true;
				bNOGRAVITY = true;
				Actor bp = Spawn("TSP_BulletPuff",pos);
				bp.target = target;
				//bp.angle = angle+180;
				//bp.pitch = -pitch;
			}
			Stop;
	}
}