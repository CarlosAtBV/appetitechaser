//===========================================================================
//
// Mel's Melee Style
//
// by Cardboard Marty
// Sprites by Cardboard Marty
// Bases by Blox, Scuba Steve, Banjo Entertainment, PrettyFist
// 
//
//===========================================================================

Class MelMeleeTest : TSP_Mel_BaseWeapon
{
	Default
	{
		Inventory.PickupMessage "You relearned your fighting style you apparently dropped [Class: Melee, Slot 1]";
		Obituary "%o learned why %k is the king of the iron fist.";
		Weapon.Kickback 100;
		Weapon.BobStyle "Alpha";
		Weapon.BobSpeed 1.5;
		Weapon.BobRangeY 1.0;
		Weapon.BobRangeX 0.5;
		Tag "ZScript Melee Test";//"$MelMeleeTag";
		
		+WEAPON.WIMPY_WEAPON
		+WEAPON.MELEEWEAPON
		+WEAPON.NOALERT
		+WEAPON.NOAUTOAIM
		+WEAPON.NOAUTOFIRE
		+NOEXTREMEDEATH
		+INVENTORY.UNDROPPABLE
		+TSP_Weapon_Core.NoModSwitch
	}
	
	int combo_mach;
	int combo_alt;
	int combo_primary;
	
	int combo_held;
	
	action State A_TSP_IfFireHeld(int tics, State state)
	{
		if ( invoker.owner.player.cmd.buttons & BT_ATTACK )
		{
			invoker.combo_held++;
		}
		
		//Console.Printf(""..invoker.combo_held);
		
		if ( invoker.combo_held >= tics )
		{
			invoker.combo_held = 0;
			//Console.Printf("YESH!");
			return state;
		}
		
		return resolveState(null);
	}
	
	action State A_TSP_MeleeReady()
	{
		if ( invoker.TSP_IsFirePressed() )
		{
			//Console.Printf("YES! I PRESSED THE FIRE STATE IN THE MELEE!!!!");
			return invoker.resolveState("Fire");
		}
		
		if ( invoker.TSP_IsAltFirePressed() )
		{
			//Console.Printf("YES! I PRESSED THE ALTFIRE STATE IN THE MELEE!!!!");
			return invoker.resolveState("AltFire");
		}
		
		A_WeaponReady(WRF_NOFIRE);
		
		return resolveState(null);
	}
	
	States
	{
		Spawn:
			TNT1 A -1;
			Loop;
		Deselect:
			TNT1 A 0 A_TakeInventory("TSPIdle", 99999);
			TNT1 A 0 A_TakeInventory("MeleeSelected", 1);
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_alt = 0;
				invoker.combo_mach = 0;
			}
			TNT1 A 0 A_JumpIfInventory("StyleComboToken", 1, "StyleDeselect");
			TNT1 A 0 A_JumpIfInventory("MelChargeToken", 1, "ComboDeselect");
			TNT1 A 0 A_JumpIfInventory("ComboCoolDown", 1, "ComboDeselect");
			TNT1 A 0 A_JumpIfInventory("TSPPistolCombo", 1, "ComboDeselect");
			TNT1 A 0 A_TakeInventory("ComboCoolDown", 99);
			TNT1 A 0 A_TakeInventory("TSPPistolCombo", 99);
			111D ABC 1;
			TNT1 A 3;
		DeselectLoop:
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAA 0  A_Lower;
			TNT1 A 1 A_Lower;
			Loop;
		StyleDeselect:
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAA 0  A_Lower;
			TNT1 A 1 A_Lower;
			Loop;
		ComboDeselect:
			TNT1 A 0 A_Lower;
			Loop;
		Select:
			TNT1 A 0 A_GiveInventory("MeleeSelected", 1);
			TNT1 A 0 A_TakeInventory("MelChargeStyle", 1);
			TNT1 A 0 A_JumpIfInventory("StyleComboToken", 1, "SwitchAttack"); // Switching mid-attack while using Charge Style goes here
			TNT1 A 0 A_JumpIfInventory("StyleChangeToken", 1, "Instaswitch"); // Activating Style Switch allows a seamless transition between styles
			TNT1 A 0 A_WeaponOffset(0,32);
			111U ABC 1;
			111G A 1 A_Raise;
			Loop;
		Instaswitch:
			TNT1 A 0 A_TakeInventory("StyleChangeToken", 99);
		Ready:
			TNT1 A 0 A_JumpIfInventory("TSP_Upgrade_ChargeStyle", 1, "CompleteReady");
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTraitStart");
			TNT1 A 0 A_JumpIfInventory("TauntPressed",1,"Taunt");
			TNT1 A 0 A_JumpIfInventory("TSPIdle", 1575, "Idle");
			TNT1 A 0 A_GiveInventory("TSPIdle", 1);
			111G A 1 A_TSP_MeleeReady();
			Loop;
		CompleteReady:
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTraitStart");
			TNT1 A 0 A_JumpIfInventory("MeleePressed",1,"StyleSwitch");
			TNT1 A 0 A_JumpIfInventory("TauntPressed",1,"Taunt");
			TNT1 A 0 A_JumpIfInventory("TSPIdle", 1575, "Idle");
			TNT1 A 0 A_GiveInventory("TSPIdle", 1);
			111G A 1 A_TSP_MeleeReady();
			Loop;


	// Idle Animations   
		Taunt:
			TNT1 A 0 A_AlertMonsters;
			TNT1 A 0 A_JumpIf(CountInv("TSP_Upgrade_PowerBank")<1,"Idle"); // If Power Bank is not purchased ya get NOTHING
			TNT1 A 0 A_GiveInventory("TSPChargedAttack", 10);
		Idle:
			TNT1 A 0 A_TakeInventory("TSPIdle", 99999);
		Idle1:
			TNT1 A 0 A_PlaySound("meltemp", CHAN_VOICE);
			111V ABCDEE 1 A_TSP_MeleeReady();
			TNT1 A 0 A_PlaySound("melidlebk", 6);
			TNT1 A 0 A_SetBlend("124 252 0", 0.4, 50);
			111V FFFFF 1 A_TSP_MeleeReady();
			TNT1 A 0 A_Quake(1,40,0,5,"");
			110F ABCDEABCDEABCDEABCDEABCDEABCDEFGHIJ 1 BRIGHT A_TSP_MeleeReady(); 
			TNT1 A 0 A_SetBlend("124 252 0", 0.01, 2);
			111V FEEDDCBA 1 A_TSP_MeleeReady();
			Goto Ready;

	// Activates Charge Style
		StyleSwitch:
			TNT1 A 0 A_TakeInventory("TSPIdle", 99999);
			"----" A 0 A_JumpIf(CountInv("TSP_Upgrade_ChargeStyle")<1,"Nope"); // Charge Style not purchased yet
		ChargeStyleActivate:
			TNT1 A 0 A_JumpIfInventory("StyleComboToken", 1, "QuickStyleSwitch");
			111V ABCDEE 1 A_TSP_MeleeReady();
			TNT1 A 0 A_PlaySound("melstylecssfx1", 6);
			TNT1 A 0 A_SetBlend("144 0 191", 0.4, 50);
			111V F 5;
			TNT1 A 0 A_Quake(1,18,0,5,"");
			110G ABCDEFGHIJ 1 BRIGHT;
			TNT1 A 0 A_SetBlend("144 0 191", 0.01, 2);
			TNT1 A 0 A_PlaySound("melstylevocs", CHAN_VOICE);
			111V FEEDDCBA 1;
			TNT1 A 0 A_GiveInventory("StyleChangeToken", 1);
			TNT1 A 0 A_GiveInventory("MelChargeToken", 1);
			TNT1 A 0 A_GiveInventory("MelChargeStyle", 1);
			111V A 1 A_SelectWeapon("MelChargeStyle");
			Goto Deselect;
		Nope:
			"----" A 0
			{
				if ( invoker.combo_primary == 99 ||
					invoker.combo_alt == 99 ||
					invoker.combo_mach == 99 )
					{
						return resolveState("AfterMelee");
					}
				
				return resolveState(null);
			}
			111G A 1;
			Goto Ready;
		

	// Switching to Charge Style mid-attack	
		QuickStyleSwitch:
			TNT1 A 4 A_PlaySound("melstylecssfx2", 6);
			TNT1 A 0 A_SetBlend("144 0 191", 0.01, 2);
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_alt = 0;
				invoker.combo_mach = 0;
			}
			TNT1 A 0 A_TakeInventory("TSPChargedAttack", 99);
			TNT1 A 0 A_GiveInventory("MelChargeToken", 1);
			TNT1 A 0 A_GiveInventory("MelChargeStyle", 1);
			TNT1 A 1 A_SelectWeapon("MelChargeStyle");
			Goto Deselect;

	// Switching styles mid-attack (from Charge Style)
		SwitchAttack:
			TNT1 A 1;
			TNT1 A 1 A_Raise;
			TNT1 A 0 A_WeaponOffset(0,32);
			TNT1 A 0 A_TakeInventory("StyleComboToken", 99);
			TNT1 A 0 A_JumpIfInventory("StyleComboEnderToken", 1, "SwitchAttackFinisher");
			"----" A 0
			{
				invoker.combo_alt += 2;
			}
			Goto Melbow;
		SwitchAttackFinisher:
			TNT1 A 0 A_TakeInventory("StyleComboToken", 99);
			TNT1 A 0 A_TakeInventory("StyleComboEnderToken", 99);
			Goto SuperUppercut;

	// Punch!
		Fire:
			TNT1 A 0 A_TakeInventory("TSPIdle", 99999);
			TNT1 A 0 A_GiveInventory("StyleComboToken", 1);
			"----" A 0
			{
				//A_JumpIfInventory("TraitPressed",1,"SPTrait")
				if ( CountInv("TSP_Upgrade_RapidFireInf") )
				{
					// Rapid-Fire EX
					switch(invoker.combo_mach)
					{
						case 8: return resolveState("AfterMelee"); break; //made so you can't Melbow again after the Rapid Fire Finish
						case 7: return resolveState("RapidFireFinish"); break; 	//K-K-P-P-P-P-P-P-P-P
						case 6: return resolveState("CrossDuo"); break;			//K-K-P-P-P-P-P-P-P
						case 5: return resolveState("CrossPunch"); break;		//K-K-P-P-P-P-P-P
					}
				}
				else
				{
					switch(invoker.combo_mach)
					{
						default: return resolveState("AfterMelee"); break; 		//made so you can't Melbow again after the Rapid Fire Finish
						case 5: return resolveState("RapidFireFinish"); break; 	//K-K-P-P-P-P-P-P
						case 4: return resolveState("CrossDuo"); break;			//K-K-P-P-P-P-P
						case 3: return resolveState("CrossPunch"); break;		//K-K-P-P-P-P
						case 2: return resolveState("CrossDuo"); break; 		//K-K-P-P-P
						case 1: return resolveState("CrossPunch"); break; 		//K-K-P-P
						case 0: break;
					}
					
					switch(invoker.combo_alt)
					{
						default: return resolveState("Melbow"); break; 			//K-K-P
						case 1:
						case 0: break;
					}
					
					switch(invoker.combo_primary)
					{
						default: return resolveState("VenomFinisher"); break; 	//P-P-P-P
						case 2: return resolveState("LeftOverhead"); break; 	//P-P-P
						case 1: return resolveState("RightHook"); break; 		//P-P
						case 0: break;
					}
				}
				
				//Just go to punch lmao
				return resolveState("Punch1");
			}
			Stop;
		
	// P DEFAULT
		Punch1:
			TNT1 A 0 A_PlaySound("*smallmelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			1111 ABCD 1;
			1111 E 1 A_TSP_Melee(10,70,"BasicMeleePuff");//A_CustomPunch(10,0,0,"BasicMeleePuff",70)
			Goto Punch1Cont;

	// P END
		Punch1Cont:
			"----" A 0
			{
				invoker.combo_primary++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			1111 FF 1 A_TSP_MeleeReady();
			1111 GH 1 A_TSP_MeleeReady();
			TNT1 A 2
			{
				if ( invoker.TSP_GetFireHeldTime() > 3 )
				{
					return resolveState("ChargeUppercut");
				}
				return A_TSP_MeleeReady();
			}
		Punch1End: //You'll return to this state if you don't continue with the uppercut!
			TNT1 A 0 ACS_NamedExecute("PlayerSpeed",0,100,0,0);
			TNT1 AAAAAAAAAAA 1 A_TSP_MeleeReady();
			Goto AfterMelee;
		
	// DEFAULT P-P
		RightHook:
			TNT1 A 1 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			1112 ABC 1;
			1112 D 1 A_TSP_Melee(12,70,"BasicMeleePuff");
			1112 E 1;
			Goto RightHookEnd;

	// P-P END
		RightHookEnd:
			"----" A 0
			{
				invoker.combo_primary++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			1112 FG 1 A_TSP_MeleeReady();
			TNT1 AAAAAAAAAAAA 1 A_TSP_MeleeReady();
			Goto AfterMelee;
		
	// P-P-P DEFAULT
		LeftOverhead:
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot6");
			TNT1 A 0 A_PlaySound("*mediummelee", CHAN_VOICE);
			1122 AB 1;
			1122 D 1 A_TSP_Melee(12,70,"BasicMeleePuff");//A_CustomPunch(12,0,0,"BasicMeleePuff",70)
			1122 D 4;
			Goto LeftOverheadEnd;

	// P-P-P END
		LeftOverheadEnd:
			"----" A 0
			{
				invoker.combo_primary++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			//TNT1 GJAAAAAAAAA 1 A_TSP_HoldForCombo("VenomFinisher","SuperUpperCut","AzureKnee","AzureKnee")
			1122 CEFA 1 A_TSP_MeleeReady();
			TNT1 AAAAAAA 1 A_TSP_MeleeReady();
			TNT1 A 3;
			Goto AfterMelee;
		
	// P-P-P-P DEFAULT
		VenomFinisher:
			TNT1 A 6 A_PlaySound("*largemelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			1114 ABC 1;
			1114 D 7 A_TSP_Melee(40,90,"UppercutMeleePuff",0,8,16,45,45);//A_CustomPunch(14,0,0,"UppercutMeleePuff",90)
			Goto VenomFinisherEnd;

	// P-P-P-P END
		VenomFinisherEnd:
			1114 EFGH 1;
			TNT1 A 8;
			Goto AfterMelee;
		

	// Charge Uppercut (After Punch1Cont)
		ChargeUppercut:
			TNT1 A 1 A_PlaySound("magpunch/charge", 5);
			TNT1 A 1 A_Quake(3,2,0,5,"");
			TNT1 A 0 ACS_NamedExecute("PlayerSpeed",0,50,0,0);
			TNT1 A 0 A_SetBlend("124 252 0", 0.4, 10);
		ChargeLvl1:
			TNT1 A 0 A_JumpIfInventory("TSPChargedAttack", 9, "ChargeComplete");
			TNT1 A 3 A_GiveInventory("TSPChargedAttack", 1);
			TNT1 A 1 A_Quake(1,2,0,5,"");
			TNT1 A 0 A_SetBlend("124 252 0", 0.05, 3);
			"----" A 0
			{
				// If fire is being held, keep charging, otherwise go to next frame
				return invoker.TSP_IsFireHeld() ? resolveState("ChargeLvl1") : resolveState(null);
			}
			Goto Punch1End;
		ChargeComplete:
			TNT1 A 0 A_ZoomFactor(1.05);
			TNT1 A 0 A_SetBlend("124 252 0", 0.4, 15);
			TNT1 A 4 A_PlaySound("magpunch/chargefin", 6);
			TNT1 A 1 A_Quake(10,5,0,5,"");
			TNT1 A 0 A_ZoomFactor(1.0);
			"----" A 0
			{
				// If fire is being held, keep charging, otherwise go to next frame
				return invoker.TSP_IsFireHeld() ? resolveState("ChargeHold") : resolveState(null);
			}
			Goto SuperUppercut;
		ChargeHold:
			TNT1 A 1 A_Quake(1,2,0,5,"");
			TNT1 A 0 A_SetBlend("124 252 0", 0.05, 3);
			"----" A 0
			{
				// If fire is being held, keep charging, otherwise go to next frame
				return invoker.TSP_IsFireHeld() ? resolveState("ChargeHold") : resolveState(null);
			}
		SuperUppercut:
			TNT1 A 0 A_TakeInventory("StyleComboEnderToken", 99);
			TNT1 A 0 ACS_NamedExecute("PlayerSpeed",0,100,0,0);
			TNT1 A 0
			{
				if (momZ > 0 && momZ <0)
				{
					A_Recoil(-5);

				}
				else
				{
					A_Recoil(-10);
				}
			}
			TNT1 A 8 A_PlaySound("*xlmelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("maguppercut", "SoundSlot6");
			TNT1 A 0
			{
				A_SetBlend("124 252 0", 0.2, 5);
				if (momZ > 0 && momZ <0)
				{
					ThrustThingZ(0,25,0,1);
				}
				else
				{
					ThrustThingZ(0,50,0,1);
				}
			}
			110D ABC 1 BRIGHT;
			110D D 2 BRIGHT A_TSP_Melee(20,90,"MagDivePuff",0,8,45,45,45,TSPM_SUPERFREEZE);
			TNT1 A 0 ThrustThingZ(0,4,0,1);
			TNT1 A 0 A_SetPitch(pitch - 3);
			110D E 2 BRIGHT ThrustThingZ(0,8,0,1);
			110D F 1 BRIGHT ThrustThingZ(0,6,0,1);
			110D G 1 BRIGHT ThrustThingZ(0,4,0,1);
			110D H 1 ThrustThingZ(0,2,0,1);
			110D ICBA 1 //Uppercut Finished
			{
				ThrustThingZ(0,1,0,1);
			}
			TNT1 A 0 A_JumpIf(CountInv("TSP_Upgrade_ChargeStyle") < 1, "SuperUppercutEnd"); //No Charge Style? GTFO
			TNT1 A 0 A_JumpIf(CountInv("TSP_Upgrade_ChargeDunk") < 1, "SuperUppercutEnd"); //No Charge Dunk? GTFO
			TNT1 A 0 A_GiveInventory("StyleComboEnderToken", 1); //ugh I guess you get a token...
			"----" AAAAAAAAAA 1
			{
				if ( CountInv("MeleePressed") )
				{
					return resolveState("AfterMelee");
				}
				
				ThrustThingZ(0,1,0,1);
				return resolveState(null);
			}
			Goto AfterMeleeCont;
		SuperUppercutEnd:
			TNT1 A 10 ThrustThingZ(0,1,0,1);
			Goto AfterMeleeCont;

	// K-K-P DEFAULT
		Melbow:
			TNT1 A 0 A_PlaySound("*mediummelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			111S ABC 1;
			111S D 1 A_TSP_Melee(20,70,"BasicMeleePuff");
			111S EEEF 1;
			Goto MelbowA;

	// K-K-P END
		MelbowA:
			"----" A 0
			{
				invoker.combo_mach++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			111S GHI 1 A_TSP_MeleeReady();
			TNT1 AAAAAAA 1 A_TSP_MeleeReady();
			TNT1 A 5;
			Goto AfterMelee;
		
	// K-K-P-P DEFAULT
		CrossPunch:
			TNT1 A 2 A_PlaySound("*smallmelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			111O AB 1 ;
			111O C 1 A_TSP_Melee(15,70,"BasicMeleePuff");//A_CustomPunch(12,0,0,"BasicMeleePuff",70)
			Goto CrossPunchA;

	// K-K-P-P END
		CrossPunchA:
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_mach++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTrait");
			111O CBA 1 A_TSP_MeleeReady();
			TNT1 A 0 A_Jump(256,"CrossEnder"); //CrossPunch and CrossDuo have the same ending frames, merged into a single state for readability)
		
	// K-K-P-P-P
		CrossDuo:
			TNT1 A 1 A_PlaySound("*smallmelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			111P AB 1;
			111P C 1 A_TSP_Melee(15,70,"BasicMeleePuff");//A_CustomPunch(12,0,0,"BasicMeleePuff",70)
			Goto CrossDuoA;
		
	// K-K-P-P-P END
		CrossDuoA:
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_mach++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			TNT1 A 0 A_JumpIf(CountInv("TSP_Upgrade_RapidFireInf")<2,"CrossDuoB"); //Do you have RAPID-FIRE INFINITE PURCHASED? If not, continue combo as usual
			"----" A 0
			{
				//Resets the mach punch counter!
				// Get a token to reset punches
				invoker.combo_mach = 1;
			}
		CrossDuoB:
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTrait");
			111P CBA 1 A_TSP_MeleeReady();
		CrossEnder:
			TNT1 AAAAAAAAAA 1 A_TSP_MeleeReady();
		CrossFinisherA: //Do you have Rapid-Fire Upgrades?
			TNT1 A 0
			{
				if (CountInv("TSP_Upgrade_RapidFireInf") == 2)
				{
				   A_Refire("RapidFireFinish");
				}
				else if (CountInv("TSP_Upgrade_RapidFireInf") == 3)
				{
				   A_Refire("VenomFinisher");
				}
				else
				{
				}
			}
		CrossFinisherB: //If no upgrades found, here you are
			TNT1 AA 1 A_TSP_MeleeReady();
			TNT1 A 3;
			Goto AfterMelee;
		
	// K-K-P-P-P-P DEFAULT
		RapidFireFinish:
			TNT1 A 2 A_PlaySound("*largemelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			TNT1 A 0 A_Recoil(-3);
			111Q ABC 1;
			111Q D 11 A_TSP_Melee(40,90,"StrongMeleePuff");//A_CustomPunch(16,0,0,"StrongMeleePuff",90)
			Goto RapidFireFinishA;
		
	// K-K-P-P-P-P END
		RapidFireFinishA:
			111Q EFG 1;
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_mach = 99;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			TNT1 AAAAAA 1 A_TSP_MeleeReady();
			"----" A 0
			{
				invoker.combo_alt = 0;
			}
			TNT1 A 6;
			Goto AfterMelee;


	// Kicks
		AltFire:
			TNT1 A 0 A_GiveInventory("StyleComboToken", 1);
			"----" A 0
			{
				switch(invoker.combo_alt)
				{
					case 4: return resolveState("CrescentFangFinisher"); break; //P-P-P-K-K
					case 3:
					case 2: return resolveState("ViperFinisher"); break; 			//K-K-K
					case 1: return resolveState("UpperKick"); break;				//K-K
				}
				
				switch(invoker.combo_primary)
				{
					case 3: return resolveState("AzureKnee"); break; 				//P-P-P-K
					case 2: return resolveState("StreetSweeperFinisher"); break;	//P-P-K
				}
				
				//Just go to kick lmao
				return resolveState("DefaultKick");
			}
			Stop;
		
	// K DEFAULT
		DefaultKick:
			TNT1 A 0 A_PlaySound("*smallmelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			111K ABC 1;
			111K D 1 A_TSP_Melee(12,90,"BasicMeleePuff");//A_CustomPunch(12,0,0,"BasicMeleePuff",90)
			111K E 1;
			Goto DefaultKickEnd;
		
	// K END
		DefaultKickEnd:
			"----" A 0
			{
				invoker.combo_alt++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			111K FG 1 A_TSP_MeleeReady();
			TNT1 AAAAAAAAAA 1 A_TSP_MeleeReady();
			Goto AfterMelee;
		
	// K-K
		UpperKick:
			TNT1 A 2;
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			TNT1 A 0 A_PlaySound("*mediummelee", CHAN_VOICE);
			111L ABC 1;
			111L D 2 A_TSP_Melee(12,90,"BasicMeleePuff");
			111L E 1;
			Goto UpperKickEnd;
		
	// K-K END
		UpperKickEnd:
			"----" A 0
			{
				invoker.combo_alt++;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			TNT1 A 0 A_JumpIfInventory("TraitPressed",1,"SPTrait");
			111L F 1 A_TSP_MeleeReady();
			TNT1 AAAAAAAAA 1 A_TSP_MeleeReady();
			TNT1 A 3;
			Goto AfterMelee;
		
	// K-K-K DEFAULT
		ViperFinisher:
			TNT1 A 5 A_PlaySound("*largemelee", CHAN_VOICE);
			TNT1 A 0 Thrustthing(angle*256/360,9, 0, 0);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			TNT1 A 0 A_SetPitch(pitch - 0.5);
			TNT1 A 0 A_SetAngle(angle + (frandom(-0.3,0.3)));
			111R ABC 1;
			111R D 3 A_TSP_Melee(24,90,"StrongMeleePuff",0,16,8);
			Goto ViperFinisherEnd;
		
	// K-K-K END
		ViperFinisherEnd:
			111R EFG 1;
			TNT1 A 7;
			Goto AfterMelee;
		
	// P-P-K DEFAULT
		StreetSweeperFinisher:
			TNT1 A 5 A_PlaySound("*largemelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			111J ABC 1;
			111J D 0 A_JumpIfInventory("PowerStrength",1,"StreetSweeperFinisherBerserk");
			111J D 1 A_TSP_Melee(30,90,"StrongMeleePuff");
			Goto StreetSweeperFinisherEnd;

	// P-P-K END
		StreetSweeperFinisherEnd:
			111J EFGH 1;
			TNT1 A 5;
			Goto AfterMelee;

	// P-P-P-K DEFAULT
		AzureKnee:
			TNT1 A 2;
			TNT1 A 0 A_PlaySoundEX("basicmelee/miss", "SoundSlot5");
			TNT1 A 0 A_Recoil(-5);
			111N ABC 1;
			111N D 4 A_TSP_Melee(16,70,"BasicMeleePuff");
			111N CB 1;
			Goto AzureKneeEnd;

	// P-P-P-K END
		AzureKneeEnd:
			"----" A 0
			{
				invoker.combo_alt += 4;
			}
			TNT1 A 0 A_GiveInventory("ComboCoolDown", 1);
			111N A 1 A_TSP_MeleeReady();
			TNT1 AAAAAAAAA 1 A_TSP_MeleeReady();
			TNT1 A 6;
			Goto AfterMelee;

	// P-P-P-K-K DEFAULT
		CrescentFangFinisher:
			TNT1 A 6 A_PlaySound("*largemelee", CHAN_VOICE);
			TNT1 A 0 A_PlaySoundEX("strongmelee/miss", "SoundSlot5");
			111M ABCDE 1;
			111M F 1 A_TSP_Melee(30+2+2+2,90,"StrongMeleePuff",10,0);
			Goto CrescentFangFinisherEnd;

	// P-P-P-K-K END
		CrescentFangFinisherEnd:
			111M GH 1;
			TNT1 A 10;
			//TNT1 A 0 A_GiveInventory("TSPPistolCombo", 1)//allows you to do the pistol combo (we'll get back to this)
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_alt = 0;
				invoker.combo_mach = 0;
			}
			Goto AfterMelee;

	// MELEE COOLDOWN
		AfterMelee:
			"----" A 0
			{
				Console.Printf("After melee moment");
			}
			TNT1 A 0 A_JumpIf(CountInv("TSP_Upgrade_ChargeStyle")<1,"AfterMeleeCont");
			TNT1 A 0 A_JumpIfInventory("MeleePressed",1,"QuickStyleSwitch");
		AfterMeleeCont:
			"----" A 0
			{
				invoker.combo_primary = 0;
				invoker.combo_alt = 0;
				invoker.combo_mach = 0;
			}
			TNT1 A 0 A_TakeInventory("TSPPistolCombo", 99);
			TNT1 A 0 A_TakeInventory("TSPChargedAttack", 99);
			TNT1 A 0 A_TakeInventory("StyleComboToken", 99);
			TNT1 A 0 A_TakeInventory("ComboCoolDown", 99);
			111U ABC 1;
			111G A 1;
			Goto Ready;

		SPTraitStart:
			111U CBA 1 ;
			Goto SPTrait;
	}
}


/*ACTOR TSPChargedAttack: Inventory
{
  Inventory.MaxAmount 99
  Inventory.Icon TNT1A0
}*/