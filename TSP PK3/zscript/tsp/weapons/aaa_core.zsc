Class TSP_Weapon_Core : DoomWeapon
{
	// A_TSP_Melee(damage, range, puff, angle, pitch, flags)
	
	action void A_TSP_Melee(int mDamage, int mRange = 72, string mPuff = "BasicMeleePuff", int mAngle = 45, int mPitch = 45, int flags = 0)
	{
		bool hasHit = false;
		//A_FireBullets(0,0,1,0,"TQB_Puff",0,75);
		ThinkerIterator MonsterFinder = ThinkerIterator.Create("Actor");
		
		Actor mo;
		
		int mMaxHealth = 0;
		
		Class<Actor > epicPuffy = mPuff;
		string epicPuffy_sound = GetDefaultByType(epicPuffy).seeSound;
		
		while (mo = Actor(MonsterFinder.Next()))
		{
			if(mo!=invoker.owner && (invoker.owner.Distance3D(mo)-mo.radius<mRange) && mo.Health>0
			&& mo.bShootable && abs(DeltaAngle(AngleTo(mo),self.angle))<mAngle)
			{
				int damageamount = mDamage;
				int myMaxHealth = mo.GetSpawnHealth();
				double stuntime;
				// zombieman stun longer
				// baron stun shorter
				stuntime = 24*(40.0/myMaxHealth);
				stuntime = max(4,stuntime);
				mo.Thrust(4,AngleTo(mo));
				int funnyDamage = mo.DamageMobj(invoker.owner,invoker.owner,damageamount,'Melee');
				//mo.A_Quake(2,4,0,750);
				if(mo.resolveState("Pain")!=null&&mo.Health>0)
				{
					mo.SetStateLabel("Pain");
					mo.A_SetTics(stuntime);
				}
				if(!mo.bNoBlood)
				{
					for(int i = 0;i<3;i++)
					{
						Actor blood = mo.Spawn("Blood",mo.pos+(0,0,mo.Height/2));
						blood.vel = (frandom(-2,2),frandom(-2,2),frandom(2,6));
					}
				}
				mo.A_PlaySound(epicPuffy_sound,CHAN_BODY);
				
				if(myMaxHealth > mMaxHealth)
				{
					mMaxHealth = mo.GetSpawnHealth();
				}
				hashit=true;
			}
		}
		if(hashit)
		{
			//A_PlaySound("flesh/hit",CHAN_WEAPON);
			SoundAlert(invoker.owner);
			A_SetTics(max(2,mMaxHealth/300));
		}
		else
		{
			A_FireBullets(0,0,1,0,mPuff,0,mRange);
		}
	}
}