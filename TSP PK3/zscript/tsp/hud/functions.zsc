Extend Class TSP_StatusBar
{
	void TSP_DrawString (HUDFont doFont, String string, Vector2 pos, int flags = 0, Color color = CLR_WHITE, float alpha = 1.0, int wrapwidth = -1, int linespacing = 4, Vector2 scale = (1,1), int pt = 0, ERenderStyle style = STYLE_Translucent)
	{
		int xOff = 0;
		
		bool manualPos = flags & DI_SCREEN_HCENTER;
		
		if ( flags & DI_TEXT_ALIGN_RIGHT )
		{
			xOff = -(doFont.mFont.StringWidth(string));
		}
		else if ( flags & DI_TEXT_ALIGN_CENTER )
		{
			xOff = -(doFont.mFont.StringWidth(string))/2;
		}
		
		screen.DrawText(doFont.mFont, Font.CR_UNTRANSLATED, drawOffset.x+pos.x+xOff, drawOffset.y+pos.y, string,
			DTA_Alpha, alpha, DTA_COLOR, color,
			DTA_HUDRules, manualPos ? BaseStatusBar.HUD_HorizCenter : BaseStatusBar.HUD_NORMAL);
		/*let tex = TexMan.CheckForTexture("HUD_LBAS");
		screen.DrawTexture(tex, false, HUDLEFT_X, HUDLEFT_Y,
			DTA_HUDRules, BaseStatusBar.HUD_NORMAL);*/
	}
	
	void TSP_DrawText (Font fnt, String string, Vector2 pos, int flags = 0, Color color = CLR_WHITE, float alpha = 1.0)
	{
		int xOff = 0;
		int baseX = pos.x;
		
		bool manualPos = flags & DI_SCREEN_HCENTER;
		
		if ( flags & DI_TEXT_ALIGN_RIGHT )
		{
			xOff = -(fnt.StringWidth(string));
		}
		else if ( flags & DI_TEXT_ALIGN_CENTER )
		{
			xOff = -(fnt.StringWidth(string))/2;
		}
		
		if ( flags & DI_SCREEN_HCENTER )
		{
			baseX = screen.GetWidth() / 2;
		}
		
		screen.DrawText(fnt, Font.CR_UNTRANSLATED, drawOffset.x+baseX+xOff, drawOffset.y+pos.y, string,
			DTA_Alpha, alpha, DTA_COLOR, CLR_BH_TIMER);
	}
}