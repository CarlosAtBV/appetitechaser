Class TSP_StatusScreen : StatusScreen
{
	int intermissioncounter;
	
	string ss_levelName;
	
	Vector2 ss_bgPos;
	
	double ss_textAlpha;
	
	string ss_hours;
	string ss_minutes;
	string ss_seconds;
	
	double ss_rankCalc;
	
	static const string ss_tallyLeft[] =
	{
		"Kills:","Items:","Secrets:","Clear Time:"
	};
	string ss_tallyRight[4];
	
	static const string ss_ranks[] =
	{
		"E","D","C","B","A","S"
	};
	
	override void initStats ()
	{
		intermissioncounter = gameinfo.intermissioncounter;
		CurState = StatCount;
		acceleratestage = 0;
		sp_state = 1;
		cnt_kills[0] = cnt_items[0] = cnt_secret[0] = -1;
		cnt_time = cnt_par = -1;
		cnt_pause = Thinker.TICRATE;
	
		cnt_total_time = -1;
		
		ss_levelName = level.LevelName;
		
		ss_tallyRight[0] = level.killed_monsters.." / "..level.total_monsters;
		ss_tallyRight[1] = level.found_items.." / "..level.total_items;
		ss_tallyRight[2] = level.found_secrets.." / "..level.total_secrets;
		
		int time = level.totaltime/35;
		
		int hours = time/3600;
		time -= hours*3600;
		int minutes = time/60;
		time -= minutes*60;
		
		ss_hours = ""..hours;
		ss_minutes = ""..minutes;
		if(minutes<10)
		{
			ss_minutes = "0"..ss_minutes;
		}
		ss_seconds = ""..time;
		if(time<10)
		{
			ss_seconds = "0"..ss_seconds;
		}
		
		ss_tallyRight[3] = ss_hours..":"..ss_minutes..":"..ss_seconds;
		
		ss_rankCalc = (double(level.killed_monsters)/max(1,level.total_monsters))
		+(double(level.found_items)/max(1,level.total_items))
		+(double(level.found_secrets)/max(1,level.total_secrets));
		Console.Printf(""..ss_rankCalc/4);
		
		ss_rankCalc = int(ss_ranks.Size()*(ss_rankCalc/4));
		Console.Printf(""..ss_rankCalc);
	}
	
	override void Ticker(void)
	{
		// counter for general background animation
		bcnt++;  
	
		if (bcnt == 1)
		{
			StartMusic();
		}
		
		checkForAccelerate();
		
		if(bcnt>12)
		{
			ss_textAlpha += 0.1;
		}
		
		if(bcnt==13)
		{
			S_Sound("menu/prompt",0);
		}
		
		ss_bgPos = (cos(bcnt),sin(bcnt*1.2))*16;
		
		if(bcnt>12accelerateStage)
		{
			End();
			level.WorldDone();
		}
	}
	
	const SS_RIGHTSTATSX = 160;

	override void updateStats ()
	{
	}

	override void drawStats (void)
	{
		TextureID spacebg = TexMan.CheckForTexture("tsps_e",TexMan.Type_MiscPatch);
		TextureID melbg = TexMan.CheckForTexture("TESTMEL2",TexMan.Type_MiscPatch);
		screen.DrawTexture (spacebg, true, 160+ss_bgPos.x, 0+ss_bgPos.y, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_CenterOffset, true);
		
		screen.Dim("#000000", 0.5, 0, screen.GetHeight()*(108.0/240.0), screen.GetWidth(), screen.GetHeight()*(116.0/240.0));
		screen.Dim("#000000", 0.5, 0, screen.GetHeight()*(16.0/240.0), screen.GetWidth(), screen.GetHeight()*(32.0/240.0));
		
		screen.DrawTexture (melbg, true, 0, 0, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
		
		screen.DrawText(BigFont, Font.CR_WHITE, 16, 18, ss_levelName, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
		screen.DrawText(SmallFont, Font.FindFontColor("TSPGreen"), 24, 20+BigFont.GetHeight()+2, "Mission Complete!", DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
		
		for(int i = 0;i<4;i++)
		{
			screen.DrawText(SmallFont, Font.FindFontColor("TSPGreen"), 16, 112+18*i, ss_tallyLeft[i], DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
			screen.DrawText(SmallFont, Font.CR_WHITE, SS_RIGHTSTATSX-SmallFont.StringWidth(""..ss_tallyRight[i]), 112+18*i, ""..ss_tallyRight[i], DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
		}
		
		screen.DrawText(BigFont, Font.FindFontColor("TSPGreen"), 8, 188, "Rank:", DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
		screen.DrawText(BigFont, Font.CR_WHITE, SS_RIGHTSTATSX+8-BigFont.StringWidth(ss_ranks[ss_rankCalc]), 188, ss_ranks[ss_rankCalc], DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, ss_textAlpha);
	}
}