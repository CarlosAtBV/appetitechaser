Extend Class TSP_PlayerPawn_ZSCBase
{	
	bool tsp_crouchSliding;
	
	override void MovePlayer ()
	{
		UserCmd cmd = player.cmd;
		
		Angle += cmd.yaw * (360./65536.);
		
		if(pp_hitFreeze>0)
		{
			A_SetAngle(angle-1,0);
			A_SetAngle(angle+1,SPF_INTERPOLATE);
			A_SetPitch(pitch-1,0);
			A_SetPitch(pitch+1,SPF_INTERPOLATE);
			return;
		}
		
		if ( player.cmd.buttons & BT_JUMP || ( tsp_crouchSliding && vel.xy.Length() < 4 ) )
		{
			tsp_crouchSliding = false;
		}
		else if ( player.cmd.buttons & BT_CROUCH )
		{
			tsp_crouchSliding = true;
		}
		
		bNOFRICTION = tsp_crouchSliding;

		player.onground = (pos.z <= floorz) || bOnMobj || bMBFBouncer || (player.cheats & CF_NOCLIP2);
		
		if ( tsp_crouchSliding && player.onground )
		{
			vel.xy *= 0.99;
		}
		else if ( player.onground )
		{
			vel.xy *= 0.9;
		}
		
		Vector2 moveDir = (cmd.forwardmove, -cmd.sidemove).Unit();
		double moveAngle = atan2(moveDir.y, moveDir.x) + angle;
		
		Console.Printf(""..vel);
		
		double runspeed = cmd.buttons & BT_SPEED ? 3.0 : 2.0;
		runspeed *= Speed;
		
		if ( !tsp_crouchSliding && (cmd.forwardmove || cmd.sidemove) )
		{
			vel.xy += (cos(moveAngle), sin(moveAngle)) * ( !player.onground ? 0.1 : runspeed );
		}
	}	
	
	override void CalcHeight()
	{
		if ( tsp_crouchSliding )
		{
			player.viewz = pos.Z + 24;
		}
		else
		{
			super.CalcHeight();
		}
	}
	
	override void CheckPitch()
	{
		if(pp_hitFreeze>0)
		{
			return;
		}
		super.CheckPitch();
	}
}