Class TSP_ShopItem
{
	string name;
	Array<string > names;
	string desc;
	int price;
	int price_increment;
	BrokenLines brokendesc;
	Array<Inventory > canthave;
	Array<Inventory > musthave;
	
	Class<Inventory > inv_class;
	int inv_amount;
	Class<Inventory > level_class;
	
	int level;
}

Class TSP_ShopHeader
{
	int slot;
	string name;
}

Class TSP_ShopTab
{
	string name;
	Array<TSP_ShopItem > itemlist;
	Array<TSP_ShopHeader > headers;
}

Class TSP_ShopPage
{
	Array<TSP_ShopTab > shopTabs;
	string name;
}

Class TSP_ShopMenu : GenericMenu
{
	const SHOP_SHOPLISTX = 162;
	const SHOP_SHOPLISTY = 2;
	const SHOP_SHOPLISTW = 158;
	const SHOP_SHOPLISTH = 22;
	const SHOP_SHOPLISTPADDING = 2;
	
	const SHOP_ITEMHEIGHT = 9;
	const SHOP_ITEMPADDING = 3;
	const SHOP_ITEMPADDINGX = 4;
	const SHOP_ITEMWIDTH = 150;
	
	Array<TSP_ShopPage > shopPages;
	
	TSP_ShopPage curPage;
	TSP_ShopTab curTab;
	TSP_ShopHeader curHeader;
	
	int sm_pageSelected;
	int sm_tabSelected;
	int sm_itemSelected;
	
	int sm_pageHovered;
	int sm_tabHovered;
	int sm_itemHovered;
	
	int sm_moveMode;
	
	Font sm_tinyFont;
	
	void NewShopPage (string name = "???")
	{
		if(curTab!=null) curPage.shopTabs.Push(curTab);
		curTab = null;
		if(curPage!=null) shopPages.Push(curPage);
		curPage = new("TSP_ShopPage");
		curPage.name = name;
	}
	
	void NewShopTab (string name = "???")
	{
		if(curTab!=null) curPage.shopTabs.Push(curTab);
		curTab = new("TSP_ShopTab");
		curTab.name = name;
	}
	
	override void Init(Menu parent)
	{
		Super.Init(parent);
		sm_tinyFont = "TinyFont";
		/*NewShopPage("Retail");
		NewShopTab("Weapon");
		CreateShopItem("Nikki - Spitfire","You can shoot a shitload of bullets instead of just one. Jesus mary and joseph thats a lot of bullets",150);
		CreateShopItem("Nikki - Whisper","Add a silencer to Darling Nikki. wow I didn't know mel was into that kind of thing",150);
		NewShopTab("Vitals");
		CreateShopItem("100 Max. Shield","Increase you maximum shield points to 100.",150);
		CreateShopItem("Faster Regen","Your shield will be regenerated faster poo poo head",300);
		CreateShopItem("Cheebos","don't eat them because they belong to thi",18000);
		NewShopTab("Weed");
		for(int i = 0;i<25;i++)
		{
			CreateShopItem("Test Item "..i);
		}
		NewShopPage("Employer");
		NewShopTab("Shite");
		CreateShopItem("Thi Doll","yea",18000);
		NewShopPage();*/
		
		parseShopLumps();
	}
	
	void DrawBG(int x, int y, int width, int height, string cbg = "#000000")
	{
		Vector2 start, size;
		[start, size] = screen.VirtualToRealCoords((x,y), (width, height), (320,240));
		screen.Dim(cbg,0.5,start.x,start.y,size.x,size.y);
	}
	
	void DrawButton(string name, Vector2 center, Vector2 size, bool active = false, bool outline = false)
	{
		DrawBG(center.x-size.x/2,center.y-size.y/2,size.x,size.y, "#000000");
		DrawBG(center.x-size.x/2,center.y+(size.y/2)-4,size.x,4, active ? "#00FF00" : "#000000");
		screen.DrawText(SmallFont, active ? Font.CR_GREEN : Font.CR_WHITE, center.x-SmallFont.StringWidth(name)/2, center.y-SmallFont.GetHeight()/2, name, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
		if(outline)
		{
			DrawBG(center.x-size.x/2,center.y-size.y/2,size.x,size.y, "#FFFF00");
		}
	}
	
	override void Drawer () 
	{
		string gbd_sign = "\f$";
		
		TSP_ShopPage dd_curPage = shopPages[sm_pageSelected];
		TSP_ShopTab dd_curTab = dd_curPage.shopTabs[sm_tabSelected];
		
		string money = gbd_sign..players[0].mo.CountInv("TSP_GlobalDollars");
		screen.DrawText(SmallFont, Font.CR_WHITE, 4, 4, money, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
		
		DrawBG(160,0,160,240);
		
		int v = 0;
		int pageSize = shopPages.Size();
		for(int i = 0;i<shopPages.Size();i++)
		{
			int px = SHOP_SHOPLISTX+((SHOP_SHOPLISTW/pageSize)/2)+(SHOP_SHOPLISTW/pageSize)*i;
			int py = SHOP_SHOPLISTY+(SHOP_SHOPLISTH/2)+(SHOP_SHOPLISTH+SHOP_SHOPLISTPADDING)*v;
			DrawButton(shopPages[i].name,(px,py),((SHOP_SHOPLISTW/pageSize)-2,22),sm_pageSelected == i,sm_moveMode == 0 && sm_pageHovered == i);
		}
		
		v++;
		int tabSize = shopPages[sm_pageSelected].shopTabs.Size();
		for(int i = 0;i<tabSize;i++)
		{
			int px = SHOP_SHOPLISTX+((SHOP_SHOPLISTW/tabSize)/2)+(SHOP_SHOPLISTW/tabSize)*i;
			int py = SHOP_SHOPLISTY+(SHOP_SHOPLISTH/2)+(SHOP_SHOPLISTH+SHOP_SHOPLISTPADDING)*v;
			DrawButton(dd_curPage.shopTabs[i].name,(px,py),((SHOP_SHOPLISTW/tabSize)-2,22),sm_tabSelected == i,sm_moveMode == 1 && sm_tabHovered == i);
		}
		
		int sy = 52;
		int sx = SHOP_SHOPLISTX+SHOP_ITEMPADDINGX;
		
		for(int i = 0;i<dd_curTab.itemlist.Size();i++)
		{
			DrawBG(sx,sy,SHOP_ITEMWIDTH,SHOP_ITEMHEIGHT, "#000000");
			if(sm_itemSelected == i)
			{
				DrawBG(sx,sy+SHOP_ITEMHEIGHT-2,SHOP_ITEMWIDTH,2, "#00FF00");
			}
			
			TSP_ShopItem dd_curItem = dd_curTab.itemlist[i];
			
			screen.DrawText(SmallFont, sm_itemSelected == i ? Font.CR_GREEN : Font.CR_WHITE, sx, sy, dd_curItem.names[dd_curItem.level], DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			
			string price;
			if(dd_curItem.level_class==null||dd_curItem.level<GetDefaultByType(dd_curItem.level_class).MaxAmount)
			{
				price = gbd_sign..dd_curItem.price+dd_curItem.price_increment*dd_curItem.level;
			}
			else
			{
				price = "\c[TSPRed]---";
			}
			screen.DrawText(SmallFont, Font.CR_GREEN, sx+SHOP_ITEMWIDTH-SmallFont.StringWidth(price), sy, price, DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			
			if(sm_moveMode == 2 && sm_itemHovered == i)
			{
				DrawBG(sx,sy,SHOP_ITEMWIDTH,SHOP_ITEMHEIGHT, "#FFFF00");
			}
			
			sy+=SHOP_ITEMHEIGHT+SHOP_ITEMPADDING;
		}
		
		DrawBG(2,178,156,56);
		
		if(sm_moveMode == 2)
		{
			TSP_ShopItem dd_curItem = dd_curTab.itemlist[sm_itemSelected];
			
			bool dd_validItem = (dd_curTab.itemList[sm_itemSelected].inv_class != null);
			double dd_alpha = dd_validItem ? 1.0 : 0.25;
			screen.DrawText(SmallFont, Font.CR_WHITE, 8, 184, dd_curItem.names[dd_curItem.level], DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, dd_alpha);
			
			int c = dd_curTab.itemList[sm_itemSelected].brokendesc.Count();
			for (int g = 0; g < c; g++)
			{
				screen.DrawText("TinyFont", Font.FindFontColor("TSPVantaBlack"), 13, 197+(SmallFont.GetHeight()*g), dd_curTab.itemList[sm_itemSelected].brokendesc.StringAt(g), DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, dd_alpha);
				screen.DrawText("TinyFont", Font.FindFontColor("TSPGreen"), 12, 196+(SmallFont.GetHeight()*g), dd_curTab.itemList[sm_itemSelected].brokendesc.StringAt(g), DTA_VirtualWidth, 320, DTA_VirtualHeight, 240, DTA_Alpha, dd_alpha);
			}
			
			if(!dd_validItem)
			{
				screen.DrawText(SmallFont, Font.FindFontColor("TSPRed"), 80-SmallFont.StringWidth("ITEM UNAVAILABLE")/2, 201, "ITEM UNAVAILABLE", DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			}
		}
			
			/*int c = dd_curItem.brokendesc.Count();
			for (int g = 0; g < c; g++)
			{
				Screen.DrawText(SmallFont, Font.FindFontColor("TSPGreen"), sx, sy+SmallFont.GetHeight()+(SmallFont.GetHeight()*g), dd_curItem.brokendesc.StringAt(g), DTA_VirtualWidth, 320, DTA_VirtualHeight, 240);
			}*/
	}
}